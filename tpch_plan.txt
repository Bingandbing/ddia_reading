SQL> explain -- Q1: Pricing Summary Report Query
   2 select
   3     l_returnflag,
   4     l_linestatus,
   5     sum(l_quantity) as sum_qty,
   6     sum(l_extendedprice) as sum_base_price,
   7     sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
   8     sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
   9     avg(l_quantity) as avg_qty,
  10     avg(l_extendedprice) as avg_price,
  11     avg(l_discount) as avg_disc,
  12     count(*) as count_order
  13 from
  14     lineitem
  15 where
  16     l_shipdate <= date '1998-12-01' - interval '90' day
  17 group by
  18     l_returnflag,
  19     l_linestatus
  20 order by
  21     l_returnflag,
  22     l_linestatus;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 1868503144                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|* 2 |   GROUP                        |                      |            |         1|     6347( 0)|                                |
|  3 |    SORT ORDER BY               |                      |            |         1|     6347( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |         1|     6347( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |         1|     6347( 0)|                                |
|* 6 |       HASH GROUP               |                      |            |         1|     6347( 0)|                                |
|  7 |        PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 591599360|     4210( 0)|                                |
|  8 |         PART SCAN ALL          |                      |            | 591599360|     4210( 0)| [0,63]                         |
|* 9 |          TABLE ACCESS FULL     | LINEITEM             | REGRESS    | 591599360|     4210( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[1][NUMBER], RemoteTable[1][NUMBER], RemoteTable[1][NUMBER], RemoteTable[1][NUMBER], RemoteTable[1][BIGINT], RemoteTable[1][BIGINT], RemoteTable[1][NUMBER], RemoteTable[1][BIGINT], RemoteTable[1][BIGINT], RemoteTable[1][CHAR, 1], RemoteTable[1][CHAR, 1]
   2 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER], SUM(Tuple[0, 2])[NUMBER], SUM(Tuple[0, 3])[NUMBER], CAST(SUM(Tuple[0, 4]) AS BIGINT)[BIGINT], CAST(SUM(Tuple[0, 5]) AS BIGINT)[BIGINT], SUM(Tuple[0, 6])[NUMBER], CAST(SUM(Tuple[0, 7]) AS BIGINT)[BIGINT], CAST(SUM(Tuple[0, 8]) AS BIGINT)[BIGINT], Tuple[0, 9][CHAR, 1], Tuple[0, 10][CHAR, 1]
       Predicate : group expressions(Tuple[0, 9], Tuple[0, 10]) 
   3 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][NUMBER], Tuple[0, 3][NUMBER], Tuple[0, 4][BIGINT], Tuple[0, 5][BIGINT], Tuple[0, 6][NUMBER], Tuple[0, 7][BIGINT], Tuple[0, 8][BIGINT], Tuple[0, 9][CHAR, 1], Tuple[0, 10][CHAR, 1]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][NUMBER], Tuple[0, 3][NUMBER], Tuple[0, 4][BIGINT], Tuple[0, 5][BIGINT], Tuple[0, 6][NUMBER], Tuple[0, 7][BIGINT], Tuple[0, 8][BIGINT], Tuple[0, 9][CHAR, 1], Tuple[0, 10][CHAR, 1]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][NUMBER], Tuple[0, 3][NUMBER], Tuple[0, 4][BIGINT], Tuple[0, 5][BIGINT], Tuple[0, 6][NUMBER], Tuple[0, 7][BIGINT], Tuple[0, 8][BIGINT], Tuple[0, 9][CHAR, 1], Tuple[0, 10][CHAR, 1]
   6 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER], SUM(Tuple[0, 2])[NUMBER], SUM(Tuple[0, 3])[NUMBER], COUNT(Tuple[0, 0])[BIGINT], COUNT(Tuple[0, 1])[BIGINT], SUM(Tuple[0, 4])[NUMBER], COUNT(Tuple[0, 4])[BIGINT], COUNT(1)[BIGINT], Tuple[0, 5][CHAR, 1], Tuple[0, 6][CHAR, 1]
       Predicate : group expressions(Tuple[0, 5], Tuple[0, 6])  
   7 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER], Tuple[0, 3][NUMBER], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5][CHAR, 1], Tuple[0, 6][CHAR, 1]
   8 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER], Tuple[0, 3][NUMBER], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5][CHAR, 1], Tuple[0, 6][CHAR, 1]
   9 - Projection: Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5][NUMBER, (15, 2)], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER], Tuple[0, 5]*(1-Tuple[0, 6])*(1+Tuple[0, 7])[NUMBER], Tuple[0, 6][NUMBER, (15, 2)], Tuple[0, 8][CHAR, 1], Tuple[0, 9][CHAR, 1]
       Predicate : access("LINEITEM"."L_SHIPDATE" <= '1998-09-02')

33 rows fetched.

SQL> 
SQL> explain -- Q2: Minimum Cost Supplier Query
   2 select
   3 	s_acctbal,
   4 	s_name,
   5 	n_name,
   6 	p_partkey,
   7 	p_mfgr,
   8 	s_address,
   9 	s_phone,
  10 	s_comment
  11 from
  12 	part,
  13 	supplier,
  14 	partsupp,
  15 	nation,
  16 	region
  17 where
  18 	p_partkey = ps_partkey
  19 	and s_suppkey = ps_suppkey
  20 	and p_size = 15
  21 	and p_type like '%BRASS'
  22 	and s_nationkey = n_nationkey
  23 	and n_regionkey = r_regionkey
  24 	and r_name = 'EUROPE'
  25 	and ps_supplycost = (
  26 		select
  27 			min(ps_supplycost)
  28 		from
  29 			partsupp,
  30 			supplier,
  31 			nation,
  32 			region
  33 		where
  34 			p_partkey = ps_partkey
  35 			and s_suppkey = ps_suppkey
  36 			and s_nationkey = n_nationkey
  37 			and n_regionkey = r_regionkey
  38 			and r_name = 'EUROPE'
  39 		)
  40 order by
  41 	s_acctbal desc,
  42 	n_name,
  43 	s_name,
  44 	p_partkey
  45 limit 100;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 557073326                                       
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    WINDOW                      |                      |            |       100|    49894( 0)|                                |
|  4 |     TOP SORT                   |                      |            |     65175|    49894( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |     65175|    20345( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |     65175|    20345( 0)|                                |
|* 7 |        HASH JOIN INNER         |                      |            |     65175|    20124( 0)|                                |
|  8 |         JOIN FILTER USE        |                      |            |    325873|    19652( 0)|                                |
|* 9 |          HASH JOIN INNER       |                      |            |    325873|    19652( 0)|                                |
| 10 |           JOIN FILTER USE      |                      |            |    325873|    19181( 0)|                                |
| 11 |            PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |    325873|    19181( 0)|                                |
|*12 |             PX SEND HASHED     | DEGREE_16,PART_0     |            |    325873|    19181( 0)|                                |
|*13 |              HASH JOIN INNER   |                      |            |    325873|    19180( 0)|                                |
| 14 |               JOIN FILTER USE  |                      |            |   1000000|       33( 0)|                                |
| 15 |                PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 16 |                 PART SCAN ALL  |                      |            |   1000000|       33( 0)| [0,63]                         |
|*17 |                  TABLE ACCESS FULL| SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*18 |               JOIN FILTER CREATE|                      |            |    325955|    18823( 0)|                                |
| 19 |                PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |    325955|    18823( 0)|                                |
|*20 |                 PX SEND HASHED | DEGREE_16,PART_64    |            |    325955|    18823( 0)|                                |
|*21 |                  HASH JOIN INNER|                      |            |    325955|    18822( 0)|                                |
| 22 |                   JOIN FILTER USE|                      |            |  80000000|      618( 0)|                                |
| 23 |                    PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  80000000|      618( 0)|                                |
| 24 |                     PART SCAN ALL|                      |            |  80000000|      618( 0)| [0,63]                         |
|*25 |                      TABLE ACCESS FULL| PARTSUPP             | REGRESS    |  80000000|      618( 0)|                                |
|*26 |                   JOIN FILTER CREATE|                      |            |    162976|     8190( 0)|                                |
|*27 |                    HASH JOIN INNER|                      |            |    162976|     8190( 0)|                                |
|*28 |                     JOIN FILTER USE|                      |            |  15995962|     5920( 0)|                                |
| 29 |                      RESULT    |                      |            |  15995962|     5920( 0)|                                |
|*30 |                       HASH GROUP|                      |            |   3998991|     5083( 0)|                                |
| 31 |                        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |   3998991|     5038( 0)|                                |
|*32 |                         PX SEND HASHED| DEGREE_16,PART_64    |            |   3998991|     5038( 0)|                                |
|*33 |                          HASH JOIN INNER|                      |            |   3998991|     5028( 0)|                                |
| 34 |                           JOIN FILTER USE|                      |            |  20000000|     1407( 0)|                                |
|*35 |                            HASH GROUP|                      |            |  20000000|     1407( 0)|                                |
| 36 |                             PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_4              |            |  80000000|      804( 0)|                                |
|*37 |                              PX SEND HASHED| DEGREE_16,PART_64    |            |  80000000|      804( 0)|                                |
| 38 |                               PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  80000000|      618( 0)|                                |
| 39 |                                PART SCAN ALL|                      |            |  80000000|      618( 0)| [0,63]                         |
|*40 |                                 TABLE ACCESS FULL| PARTSUPP             | REGRESS    |  80000000|      618( 0)|                                |
|*41 |                           JOIN FILTER CREATE|                      |            |    200000|     1020( 0)|                                |
|*42 |                            HASH JOIN INNER|                      |            |    200000|     1020( 0)|                                |
| 43 |                             JOIN FILTER USE|                      |            |   1000000|       33( 0)|                                |
| 44 |                              PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 45 |                               PART SCAN ALL|                      |            |   1000000|       33( 0)| [0,63]                         |
|*46 |                                TABLE ACCESS FULL| SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*47 |                             JOIN FILTER CREATE|                      |            |         5|      862( 0)|                                |
| 48 |                              PX RECEIVER BROADCAST N2N COL| QUEUE_5              |            |         5|      862( 0)|                                |
| 49 |                               PX SEND BROADCAST| DEGREE_16,PART_64    |            |         5|      862( 0)|                                |
|*50 |                                HASH JOIN INNER|                      |            |         5|      862( 0)|                                |
| 51 |                                 JOIN FILTER USE|                      |            |        25|      431( 0)|                                |
| 52 |                                  PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_6              |            |        25|      431( 0)|                                |
|*53 |                                   PX SEND HASHED| DEGREE_1,PART_0      |            |        25|      431( 0)|                                |
|*54 |                                    TABLE ACCESS FULL| NATION               | REGRESS    |        25|      431( 0)|                                |
|*55 |                                 JOIN FILTER CREATE|                      |            |         1|      431( 0)|                                |
| 56 |                                  PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_7              |            |         1|      431( 0)|                                |
|*57 |                                   PX SEND HASHED| DEGREE_1,PART_0      |            |         1|      431( 0)|                                |
|*58 |                                    TABLE ACCESS FULL| REGION               | REGRESS    |         1|      431( 0)|                                |
|*59 |                     JOIN FILTER CREATE|                      |            |    203774|      162( 0)|                                |
| 60 |                      PX BLOCK ITERATOR HASHED| DEGREE_16            |            |    203774|      162( 0)|                                |
| 61 |                       PART SCAN ALL|                      |            |    203774|      162( 0)| [0,63]                         |
|*62 |                        TABLE ACCESS FULL| PART                 | REGRESS    |    203774|      162( 0)|                                |
|*63 |           JOIN FILTER CREATE   |                      |            |        25|      431( 0)|                                |
| 64 |            PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_8              |            |        25|      431( 0)|                                |
|*65 |             PX SEND HASHED     | DEGREE_1,PART_0      |            |        25|      431( 0)|                                |
|*66 |              TABLE ACCESS FULL | NATION               | REGRESS    |        25|      431( 0)|                                |
|*67 |         JOIN FILTER CREATE     |                      |            |         1|      431( 0)|                                |
| 68 |          PX RECEIVER BROADCAST I2N COL| QUEUE_9              |            |         1|      431( 0)|                                |
| 69 |           PX SEND BROADCAST    | DEGREE_1,PART_0      |            |         1|      431( 0)|                                |
|*70 |            TABLE ACCESS FULL   | REGION               | REGRESS    |         1|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[6][NUMBER, (15, 2)], RemoteTable[6][CHAR, 25], RemoteTable[6][CHAR, 25], RemoteTable[6][INTEGER], RemoteTable[6][CHAR, 25], RemoteTable[6][VARCHAR, 40], RemoteTable[6][CHAR, 15], RemoteTable[6][VARCHAR, 101]
   2 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
   3 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
   4 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
   5 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
   6 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
   7 - Projection: Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][CHAR, 25], Tuple[0, 3][CHAR, 25], Tuple[0, 4, 0][INTEGER], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][CHAR, 15], Tuple[0, 8][VARCHAR, 101]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
   8 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][CHAR, 25], Tuple[0, 3][CHAR, 25], Tuple[0, 4, 0][INTEGER], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][CHAR, 15], Tuple[0, 8][VARCHAR, 101]
   9 - Projection: Tuple[1, 1][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][CHAR, 25], Tuple[1, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][CHAR, 25], Tuple[0, 3, 0][INTEGER], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 101]
                   access(Tuple[0, 0])                          
  13 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)], Tuple[0, 3][CHAR, 25], Tuple[1, 1, 0][INTEGER], Tuple[1, 2][CHAR, 25], Tuple[0, 4][VARCHAR, 40], Tuple[0, 5][CHAR, 15], Tuple[0, 6][VARCHAR, 101]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)], Tuple[0, 3][CHAR, 25], Tuple[0, 4][VARCHAR, 40], Tuple[0, 5][CHAR, 15], Tuple[0, 6][VARCHAR, 101]
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)], Tuple[0, 3][CHAR, 25], Tuple[0, 4][VARCHAR, 40], Tuple[0, 5][CHAR, 15], Tuple[0, 6][VARCHAR, 101]
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)], Tuple[0, 3][CHAR, 25], Tuple[0, 4][VARCHAR, 40], Tuple[0, 5][CHAR, 15], Tuple[0, 6][VARCHAR, 101]
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][INTEGER], Tuple[0, 5][NUMBER, (15, 2)], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 4][CHAR, 15], Tuple[0, 6][VARCHAR, 101]
       Predicate : RUNTIME FILTER(RUNTIME USE(5): "SUPPLIER"."S_SUPPKEY" AND RUNTIME USE(6): "SUPPLIER"."S_NATIONKEY")
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1, 0][INTEGER], Tuple[0, 2][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(5): "PARTSUPP"."PS_SUPPKEY")
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1, 0][INTEGER], Tuple[0, 2][CHAR, 25]
  20 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1, 0][INTEGER], Tuple[0, 2][CHAR, 25]
                   access(Tuple[0, 0])                          
  21 - Projection: Tuple[0, 2][INTEGER], Tuple[1, 2, 0][INTEGER], Tuple[1, 3][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0] AND Tuple[0, 1] = Tuple[1, 1])
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][INTEGER]
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][INTEGER]
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][INTEGER]
  25 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME USE(4): "PARTSUPP"."PS_PARTKEY", "PARTSUPP"."PS_SUPPLYCOST")
  26 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2, 0][INTEGER], Tuple[0, 3][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(4): "VSQ$5@SEL$0"."PS_PARTKEY", "VSQ$5@SEL$0"."MIN(PS_SUPPLYCOST)")
  27 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[1, 0, 0][INTEGER], Tuple[1, 1][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
  28 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)]
       Predicate : RUNTIME FILTER(RUNTIME USE(3): "PARTSUPP"."PS_PARTKEY")
  29 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][NUMBER, (15, 2)]
  30 - Projection: MIN(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  31 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
  32 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
                   access(Tuple[0, 1])                          
  33 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
       Predicate : access(Tuple[0, 2] = Tuple[1, 0])            
  34 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  35 - Projection: MIN(Tuple[0, 0])[NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  36 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  37 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 2])                          
  38 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  39 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  40 - Projection: Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "PARTSUPP"."PS_SUPPKEY" AND RUNTIME USE(3): "PARTSUPP"."PS_PARTKEY")
  41 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "SUPPLIER"."S_SUPPKEY")
  42 - Projection: Tuple[0, 1][INTEGER]                         
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  43 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  44 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  45 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  46 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "SUPPLIER"."S_NATIONKEY")
  47 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "NATION"."N_NATIONKEY")
  48 - Projection: Tuple[0, 0][INTEGER]                         
  49 - Projection: Tuple[0, 0][INTEGER]                         
  50 - Projection: Tuple[0, 1][INTEGER]                         
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  51 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  52 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  53 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  54 - Projection: Tuple[0, 2][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "NATION"."N_REGIONKEY")
  55 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "REGION"."R_REGIONKEY")
  56 - Projection: Tuple[0, 0][INTEGER]                         
  57 - Projection: Tuple[0, 0][INTEGER]                         
                   access(Tuple[0, 0])                          
  58 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("REGION"."R_NAME" = 'EUROPE')         
  59 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "PART"."P_PARTKEY")
  60 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][CHAR, 25]
  61 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][CHAR, 25]
  62 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 2][CHAR, 25]
       Predicate : access("PART"."P_SIZE" = 15)                 
                   filter(Tuple[0, 4] LIKE '%BRASS')            
  63 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(6): "NATION"."N_NATIONKEY")
  64 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  65 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
                   access(Tuple[0, 0])                          
  66 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 1][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME USE(7): "NATION"."N_REGIONKEY")
  67 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(7): "REGION"."R_REGIONKEY")
  68 - Projection: Tuple[0, 0][INTEGER]                         
  69 - Projection: Tuple[0, 0][INTEGER]                         
  70 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("REGION"."R_NAME" = 'EUROPE')         

188 rows fetched.

SQL> 
SQL> explain -- Q3: Shipping Priority Query
   2 select
   3 	l_orderkey,
   4 	sum(l_extendedprice*(1-l_discount)) as revenue,
   5 	o_orderdate,
   6 	o_shippriority
   7 from
   8 	customer,
   9 	orders,
  10 	lineitem
  11 where
  12 	c_mktsegment = 'BUILDING'
  13 	and c_custkey = o_custkey
  14 	and l_orderkey = o_orderkey
  15 	and o_orderdate < date '1995-03-15'
  16 	and l_shipdate > date '1995-03-15'
  17 group by
  18 	l_orderkey,
  19 	o_orderdate,
  20 	o_shippriority
  21 order by
  22 	revenue desc,
  23 	o_orderdate
  24 limit 100;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 2738347982                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    WINDOW                      |                      |            |       100| 55963768( 0)|                                |
|  4 |     TOP SORT                   |                      |            |  75000000| 55963628( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |  75000000|   339962( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |  75000000|   339962( 0)|                                |
|* 7 |        HASH GROUP              |                      |            |  75000000|    85572( 0)|                                |
|* 8 |         HASH JOIN INNER        |                      |            | 188122944|    83126( 0)|                                |
|  9 |          JOIN FILTER USE       |                      |            | 323494496|     4210( 0)|                                |
| 10 |           PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 323494496|     4210( 0)|                                |
| 11 |            PART SCAN ALL       |                      |            | 323494496|     4210( 0)| [0,63]                         |
|*12 |             TABLE ACCESS FULL  | LINEITEM             | REGRESS    | 323494496|     4210( 0)|                                |
|*13 |          JOIN FILTER CREATE    |                      |            |  43615088|    12124( 0)|                                |
| 14 |           PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |  43615088|    12124( 0)|                                |
|*15 |            PX SEND HASHED      | DEGREE_16,PART_64    |            |  43615088|    12124( 0)|                                |
|*16 |             HASH JOIN INNER    |                      |            |  43615088|    12022( 0)|                                |
| 17 |              JOIN FILTER USE   |                      |            |  72687240|     1040( 0)|                                |
| 18 |               PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |  72687240|     1040( 0)|                                |
|*19 |                PX SEND HASHED  | DEGREE_16,PART_64    |            |  72687240|     1040( 0)|                                |
| 20 |                 PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  72687240|      871( 0)|                                |
| 21 |                  PART SCAN ALL |                      |            |  72687240|      871( 0)| [0,63]                         |
|*22 |                   TABLE ACCESS FULL| ORDERS               | REGRESS    |  72687240|      871( 0)|                                |
|*23 |              JOIN FILTER CREATE|                      |            |   3000188|      136( 0)|                                |
| 24 |               PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   3000188|      136( 0)|                                |
| 25 |                PART SCAN ALL   |                      |            |   3000188|      136( 0)| [0,63]                         |
|*26 |                 TABLE ACCESS FULL| CUSTOMER             | REGRESS    |   3000188|      136( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[3][INTEGER], RemoteTable[3][NUMBER], RemoteTable[3][DATE], RemoteTable[3][INTEGER]
   2 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
   3 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][NUMBER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
   6 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
   7 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3])
   8 - Projection: Tuple[0, 1][NUMBER], Tuple[0, 0][INTEGER], Tuple[1, 1][DATE], Tuple[1, 2][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER]
       Predicate : access("LINEITEM"."L_SHIPDATE" > '1995-03-15')
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "LINEITEM"."L_ORDERKEY")
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][DATE], Tuple[0, 2][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "ORDERS"."O_ORDERKEY")
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][DATE], Tuple[0, 2][INTEGER]
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][DATE], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 0])                          
  16 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
                   access(Tuple[0, 0])                          
  20 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][INTEGER]
  22 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 4][DATE], Tuple[0, 7][INTEGER]
       Predicate : access("ORDERS"."O_ORDERDATE" < '1995-03-15')
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "ORDERS"."O_CUSTKEY")
  23 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "CUSTOMER"."C_CUSTKEY")
  24 - Projection: Tuple[0, 0][INTEGER]                         
  25 - Projection: Tuple[0, 0][INTEGER]                         
  26 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("CUSTOMER"."C_MKTSEGMENT" = 'BUILDING')

76 rows fetched.

SQL> 
SQL> explain -- Q4: Order Priority Checking Query
   2 select
   3 	o_orderpriority,
   4 	count(*) as order_count
   5 from
   6 	orders
   7 where
   8 	o_orderdate >= date '1993-07-01'
   9 	and o_orderdate < date '1993-07-01' + interval '3' month
  10 	and exists (
  11 		select
  12 			*
  13 		from
  14 			lineitem
  15 		where
  16 			l_orderkey = o_orderkey
  17 			and l_commitdate < l_receiptdate
  18 	)
  19 group by
  20 	o_orderpriority
  21 order by
  22 	o_orderpriority;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 659345166                                       
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   SORT ORDER BY                |                      |            |         2|    34360( 0)|                                |
|* 3 |    HASH GROUP                  |                      |            |         2|    34360( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |         2|    34360( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |         2|    34360( 0)|                                |
|* 6 |       HASH GROUP               |                      |            |         2|    34360( 0)|                                |
|* 7 |        HASH JOIN RIGHT SEMI    |                      |            |   5610207|    34340( 0)|                                |
|  8 |         JOIN FILTER USE        |                      |            | 208371280|     4210( 0)|                                |
|  9 |          PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 208371280|     4210( 0)|                                |
| 10 |           PART SCAN ALL        |                      |            | 208371280|     4210( 0)| [0,63]                         |
|*11 |            TABLE ACCESS FULL   | LINEITEM             | REGRESS    | 208371280|     4210( 0)|                                |
|*12 |         JOIN FILTER CREATE     |                      |            |   5610216|      871( 0)|                                |
| 13 |          PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   5610216|      871( 0)|                                |
| 14 |           PART SCAN ALL        |                      |            |   5610216|      871( 0)| [0,63]                         |
|*15 |            TABLE ACCESS FULL   | ORDERS               | REGRESS    |   5610216|      871( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[2][BIGINT], RemoteTable[2][CHAR, 15]
   2 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 15]   
   3 - Projection: CAST(SUM(Tuple[0, 0]) AS BIGINT)[BIGINT], Tuple[0, 1][CHAR, 15]
       Predicate : group expressions(Tuple[0, 1])               
   4 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 15]   
   5 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 15]   
   6 - Projection: COUNT(1)[BIGINT], Tuple[0, 0][CHAR, 15]      
       Predicate : group expressions(Tuple[0, 0])               
   7 - Projection: Tuple[1, 1][CHAR, 15]                        
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
   8 - Projection: Tuple[0, 0][INTEGER]                         
   9 - Projection: Tuple[0, 0][INTEGER]                         
  10 - Projection: Tuple[0, 0][INTEGER]                         
  11 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : filter(Tuple[0, 11] < Tuple[0, 12])          
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "LINEITEM"."L_ORDERKEY")
  12 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][CHAR, 15]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "ORDERS"."O_ORDERKEY")
  13 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][CHAR, 15]
  14 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][CHAR, 15]
  15 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 5][CHAR, 15]
       Predicate : access("ORDERS"."O_ORDERDATE" >= '1993-07-01' AND "ORDERS"."O_ORDERDATE"  < '1993-10-01')

49 rows fetched.

SQL> 
SQL> explain -- Q5: Local Supplier Volume Query
   2 select
   3 	n_name,
   4 	sum(l_extendedprice * (1 - l_discount)) as revenue
   5 from
   6 	customer,
   7 	orders,
   8 	lineitem,
   9 	supplier,
  10 	nation,
  11 	region
  12 where
  13 	c_custkey = o_custkey
  14 	and l_orderkey = o_orderkey
  15 	and l_suppkey = s_suppkey
  16 	and c_nationkey = s_nationkey
  17 	and s_nationkey = n_nationkey
  18 	and n_regionkey = r_regionkey
  19 	and r_name = 'ASIA'
  20 	and o_orderdate >= date '1994-01-01'
  21 	and o_orderdate < date '1994-01-01' + interval '1' year
  22 group by
  23 	n_name
  24 order by
  25 	revenue desc;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 1351499982                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    SORT ORDER BY               |                      |            |        25|    91419( 0)|                                |
|* 4 |     HASH GROUP                 |                      |            |        25|    91416( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |        25|    91416( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |        25|    91416( 0)|                                |
|* 7 |        HASH GROUP              |                      |            |        25|    91416( 0)|                                |
|* 8 |         HASH JOIN INNER        |                      |            |   9339732|    91382( 0)|                                |
|  9 |          JOIN FILTER USE       |                      |            |  17961024|    88510( 0)|                                |
| 10 |           PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |  17961024|    88510( 0)|                                |
|*11 |            PX SEND HASHED      | DEGREE_16,PART_64    |            |  17961024|    88510( 0)|                                |
|*12 |             HASH JOIN INNER    |                      |            |  17961024|    88468( 0)|                                |
| 13 |              JOIN FILTER USE   |                      |            | 600037888|     2976( 0)|                                |
| 14 |               PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 15 |                PART SCAN ALL   |                      |            | 600037888|     2976( 0)| [0,63]                         |
|*16 |                 TABLE ACCESS FULL| LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
|*17 |              JOIN FILTER CREATE|                      |            |   4489978|     8380( 0)|                                |
| 18 |               PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |   4489978|     8380( 0)|                                |
|*19 |                PX SEND HASHED  | DEGREE_16,PART_64    |            |   4489978|     8380( 0)|                                |
|*20 |                 HASH JOIN INNER|                      |            |   4489978|     8369( 0)|                                |
| 21 |                  JOIN FILTER USE|                      |            |  22449892|      923( 0)|                                |
| 22 |                   PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |  22449892|      923( 0)|                                |
|*23 |                    PX SEND HASHED| DEGREE_16,PART_64    |            |  22449892|      923( 0)|                                |
| 24 |                     PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  22449892|      871( 0)|                                |
| 25 |                      PART SCAN ALL|                      |            |  22449892|      871( 0)| [0,63]                         |
|*26 |                       TABLE ACCESS FULL| ORDERS               | REGRESS    |  22449892|      871( 0)|                                |
|*27 |                  JOIN FILTER CREATE|                      |            |   3000000|     2827( 0)|                                |
|*28 |                   HASH JOIN INNER|                      |            |   3000000|     2827( 0)|                                |
| 29 |                    JOIN FILTER USE|                      |            |  15000000|      105( 0)|                                |
| 30 |                     PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  15000000|      105( 0)|                                |
| 31 |                      PART SCAN ALL|                      |            |  15000000|      105( 0)| [0,63]                         |
|*32 |                       TABLE ACCESS FULL| CUSTOMER             | REGRESS    |  15000000|      105( 0)|                                |
|*33 |                    JOIN FILTER CREATE|                      |            |         5|      862( 0)|                                |
| 34 |                     PX RECEIVER BROADCAST N2N COL| QUEUE_4              |            |         5|      862( 0)|                                |
| 35 |                      PX SEND BROADCAST| DEGREE_16,PART_64    |            |         5|      862( 0)|                                |
|*36 |                       HASH JOIN INNER|                      |            |         5|      862( 0)|                                |
| 37 |                        JOIN FILTER USE|                      |            |        25|      431( 0)|                                |
| 38 |                         PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_5              |            |        25|      431( 0)|                                |
|*39 |                          PX SEND HASHED| DEGREE_1,PART_0      |            |        25|      431( 0)|                                |
|*40 |                           TABLE ACCESS FULL| NATION               | REGRESS    |        25|      431( 0)|                                |
|*41 |                        JOIN FILTER CREATE|                      |            |         1|      431( 0)|                                |
| 42 |                         PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_6              |            |         1|      431( 0)|                                |
|*43 |                          PX SEND HASHED| DEGREE_1,PART_0      |            |         1|      431( 0)|                                |
|*44 |                           TABLE ACCESS FULL| REGION               | REGRESS    |         1|      431( 0)|                                |
|*45 |          JOIN FILTER CREATE    |                      |            |   1000000|       33( 0)|                                |
| 46 |           PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 47 |            PART SCAN ALL       |                      |            |   1000000|       33( 0)| [0,63]                         |
| 48 |             TABLE ACCESS FULL  | SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[6][NUMBER], RemoteTable[6][CHAR, 25]
   2 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25]   
   3 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25]   
   4 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][CHAR, 25]
       Predicate : group expressions(Tuple[0, 1])               
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25]   
   6 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25]   
   7 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][CHAR, 25]
       Predicate : group expressions(Tuple[0, 1])               
   8 - Projection: Tuple[0, 2][NUMBER], Tuple[0, 3][CHAR, 25]   
       Predicate : access(Tuple[0, 0] = Tuple[1, 0] AND Tuple[0, 1] = Tuple[1, 1])
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][CHAR, 25]
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][CHAR, 25]
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][CHAR, 25]
                   access(Tuple[0, 0])                          
  12 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[1, 2][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER]
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER]
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER]
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER]
       Predicate : RUNTIME FILTER(RUNTIME USE(3): "LINEITEM"."L_ORDERKEY" AND RUNTIME USE(4): "LINEITEM"."L_SUPPKEY")
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "ORDERS"."O_ORDERKEY")
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
                   access(Tuple[0, 0])                          
  20 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][INTEGER], Tuple[1, 2][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  25 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  26 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : access("ORDERS"."O_ORDERDATE" >= '1994-01-01' AND "ORDERS"."O_ORDERDATE"  < '1995-01-01')
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "ORDERS"."O_CUSTKEY")
  27 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "CUSTOMER"."C_CUSTKEY")
  28 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 0][INTEGER], Tuple[1, 1][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  29 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  30 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  31 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  32 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "CUSTOMER"."C_NATIONKEY")
  33 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "NATION"."N_NATIONKEY")
  34 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  35 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  36 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]  
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  37 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  38 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  39 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
                   access(Tuple[0, 0])                          
  40 - Projection: Tuple[0, 2][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "NATION"."N_REGIONKEY" AND RUNTIME USE(5): "NATION"."N_NATIONKEY")
  41 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "REGION"."R_REGIONKEY")
  42 - Projection: Tuple[0, 0][INTEGER]                         
  43 - Projection: Tuple[0, 0][INTEGER]                         
                   access(Tuple[0, 0])                          
  44 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("REGION"."R_NAME" = 'ASIA')           
  45 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME CREATE(4): "SUPPLIER"."S_SUPPKEY" AND RUNTIME CREATE(5): "SUPPLIER"."S_NATIONKEY")
  46 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  47 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  48 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][INTEGER]   

131 rows fetched.

SQL> 
SQL> explain -- Q6: Forecasting Revenue Change Query
   2 select
   3 	sum(l_extendedprice*l_discount) as revenue
   4 from
   5 	lineitem
   6 where
   7 	l_shipdate >= date '1994-01-01'
   8 	and l_shipdate < date '1994-01-01' + interval '1' year
   9 	and l_discount between  0.06 - 0.01 and  0.06 + 0.01
  10 	and l_quantity < 24;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 1538353149                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   AGGREGATE                    |                      |            |         1|     4478( 0)|                                |
|  3 |    PX RECEIVER GATHER N2I COL  | QUEUE_0              |            |         1|     4478( 0)|                                |
|  4 |     PX SEND RANDOM             | DEGREE_16,PART_0     |            |         1|     4478( 0)|                                |
|  5 |      AGGREGATE                 |                      |            |         1|     4478( 0)|                                |
|  6 |       PX BLOCK ITERATOR HASHED | DEGREE_16            |            |  53828832|     4210( 0)|                                |
|  7 |        PART SCAN ALL           |                      |            |  53828832|     4210( 0)| [0,63]                         |
|* 8 |         TABLE ACCESS FULL      | LINEITEM             | REGRESS    |  53828832|     4210( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[1][NUMBER]                       
   2 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   3 - Projection: Tuple[0, 0][NUMBER]                          
   4 - Projection: Tuple[0, 0][NUMBER]                          
   5 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   6 - Projection: Tuple[0, 0][NUMBER]                          
   7 - Projection: Tuple[0, 0][NUMBER]                          
   8 - Projection: Tuple[0, 5]*Tuple[0, 6][NUMBER]              
       Predicate : access("LINEITEM"."L_QUANTITY" < 24 AND "LINEITEM"."L_DISCOUNT" >= .05 AND "LINEITEM"."L_DISCOUNT"  <= .07 AND "LINEITEM"."L_SHIPDATE" >= '1994-01-01' AND "LINEITEM"."L_SHIPDATE"  < '1995-01-01')

29 rows fetched.

SQL> 
SQL> explain -- Q7: Volume Shipping Query
   2 select
   3         supp_nation,
   4         cust_nation,
   5         l_year,
   6         sum(volume) as revenue
   7 from (
   8         select
   9                 n1.n_name as supp_nation,
  10                 n2.n_name as cust_nation,
  11                 extract(year from l_shipdate) as l_year,
  12                 l_extendedprice * (1 - l_discount) as volume
  13         from
  14                 supplier,
  15                 lineitem,
  16                 orders,
  17                 customer,
  18                 nation n1,
  19                 nation n2
  20         where
  21                 s_suppkey = l_suppkey
  22                 and o_orderkey = l_orderkey
  23                 and c_custkey = o_custkey
  24                 and s_nationkey = n1.n_nationkey
  25                 and c_nationkey = n2.n_nationkey selectivity 0.01
  26                 and (
  27                         (n1.n_name = 'FRANCE' selectivity 1 and n2.n_name = 'GERMANY' selectivity 1)
  28                         or (n1.n_name = 'GERMANY' selectivity 1 and n2.n_name = 'FRANCE' selectivity 1)
  29                 )
  30                 and l_shipdate between date '1995-01-01' and date '1996-12-31'
  31         ) shipping
  32 group by
  33         supp_nation,
  34         cust_nation,
  35         l_year
  36 order by
  37         supp_nation,
  38         cust_nation,
  39         l_year;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 1279619269                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    SORT ORDER BY               |                      |            |      1000|    53020( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |      1000|    52737( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |      1000|    52737( 0)|                                |
|* 6 |       HASH GROUP               |                      |            |      1000|    52734( 0)|                                |
|  7 |        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |      1000|    52734( 0)|                                |
|* 8 |         PX SEND HASHED         | DEGREE_16,PART_64    |            |      1000|    52734( 0)|                                |
|* 9 |          HASH GROUP            |                      |            |      1000|    52734( 0)|                                |
| 10 |           RESULT               |                      |            |    291682|    52733( 0)|                                |
|*11 |            HASH JOIN INNER     |                      |            |    291682|    52717( 0)|                                |
| 12 |             JOIN FILTER USE    |                      |            |   3646024|    51834( 0)|                                |
|*13 |              HASH JOIN INNER   |                      |            |   3646024|    51834( 0)|                                |
| 14 |               JOIN FILTER USE  |                      |            |   3646024|    50736( 0)|                                |
| 15 |                PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |   3646024|    50736( 0)|                                |
|*16 |                 PX SEND HASHED | DEGREE_16,PART_64    |            |   3646024|    50736( 0)|                                |
|*17 |                  HASH JOIN INNER|                      |            |   3646024|    50728( 0)|                                |
| 18 |                   JOIN FILTER USE|                      |            | 182301152|     4210( 0)|                                |
| 19 |                    PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 182301152|     4210( 0)|                                |
| 20 |                     PART SCAN ALL|                      |            | 182301152|     4210( 0)| [0,63]                         |
|*21 |                      TABLE ACCESS FULL| LINEITEM             | REGRESS    | 182301152|     4210( 0)|                                |
|*22 |                   JOIN FILTER CREATE|                      |            |   3000000|    22088( 0)|                                |
| 23 |                    PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |   3000000|    22088( 0)|                                |
|*24 |                     PX SEND HASHED| DEGREE_16,PART_64    |            |   3000000|    22088( 0)|                                |
|*25 |                      HASH JOIN INNER|                      |            |   3000000|    22081( 0)|                                |
| 26 |                       JOIN FILTER USE|                      |            | 150000000|      912( 0)|                                |
| 27 |                        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_4              |            | 150000000|      912( 0)|                                |
|*28 |                         PX SEND HASHED| DEGREE_16,PART_64    |            | 150000000|      912( 0)|                                |
| 29 |                          PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 150000000|      563( 0)|                                |
| 30 |                           PART SCAN ALL|                      |            | 150000000|      563( 0)| [0,63]                         |
|*31 |                            TABLE ACCESS FULL| ORDERS               | REGRESS    | 150000000|      563( 0)|                                |
|*32 |                       JOIN FILTER CREATE|                      |            |    300000|     2396( 0)|                                |
|*33 |                        HASH JOIN INNER|                      |            |    300000|     2396( 0)|                                |
| 34 |                         JOIN FILTER USE|                      |            |  15000000|      105( 0)|                                |
| 35 |                          PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  15000000|      105( 0)|                                |
| 36 |                           PART SCAN ALL|                      |            |  15000000|      105( 0)| [0,63]                         |
|*37 |                            TABLE ACCESS FULL| CUSTOMER             | REGRESS    |  15000000|      105( 0)|                                |
|*38 |                         JOIN FILTER CREATE|                      |            |         2|      431( 0)|                                |
| 39 |                          PX RECEIVER BROADCAST I2N COL| QUEUE_5              |            |         2|      431( 0)|                                |
| 40 |                           PX SEND BROADCAST| DEGREE_1,PART_64     |            |         2|      431( 0)|                                |
|*41 |                            TABLE ACCESS FULL| NATION               | REGRESS    |         2|      431( 0)|                                |
|*42 |               JOIN FILTER CREATE|                      |            |   1000000|       33( 0)|                                |
| 43 |                PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 44 |                 PART SCAN ALL  |                      |            |   1000000|       33( 0)| [0,63]                         |
|*45 |                  TABLE ACCESS FULL| SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*46 |             JOIN FILTER CREATE |                      |            |         2|      431( 0)|                                |
| 47 |              PX RECEIVER BROADCAST I2N COL| QUEUE_6              |            |         2|      431( 0)|                                |
| 48 |               PX SEND BROADCAST| DEGREE_1,PART_64     |            |         2|      431( 0)|                                |
|*49 |                TABLE ACCESS FULL| NATION               | REGRESS    |         2|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[1][NUMBER], RemoteTable[1][CHAR, 25], RemoteTable[1][CHAR, 25], RemoteTable[1][INTEGER]
   2 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
   3 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
   6 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3])
   7 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
   8 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
                   access(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3])
   9 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3])
  10 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][CHAR, 25], Tuple[0, 3][INTEGER]
  11 - Projection: Tuple[0, 2][NUMBER], Tuple[1, 1][CHAR, 25], Tuple[0, 1][CHAR, 25], Tuple[0, 3][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
                   filter(Tuple[0, 1] = 'GERMANY' AND Tuple[1, 1] = 'FRANCE' OR Tuple[0, 1] = 'FRANCE' AND Tuple[1, 1] = 'GERMANY')
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  13 - Projection: Tuple[1, 1][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
                   access(Tuple[0, 0])                          
  17 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][CHAR, 25], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  20 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER], EXTRACT(YEAR FROM Tuple[0, 10])[INTEGER]
       Predicate : access("LINEITEM"."L_SHIPDATE" >= '1995-01-01' AND "LINEITEM"."L_SHIPDATE"  <= '1996-12-31')
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "LINEITEM"."L_ORDERKEY" AND RUNTIME USE(3): "LINEITEM"."L_SUPPKEY")
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "ORDERS"."O_ORDERKEY")
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
                   access(Tuple[0, 0])                          
  25 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][CHAR, 25]  
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  26 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  27 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  28 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  29 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  30 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  31 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "ORDERS"."O_CUSTKEY")
  32 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "CUSTOMER"."C_CUSTKEY")
  33 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][CHAR, 25]  
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  34 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  35 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  36 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  37 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "CUSTOMER"."C_NATIONKEY")
  38 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "N2"."N_NATIONKEY")
  39 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  40 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  41 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : access("N2"."N_NAME" IN ('FRANCE', 'GERMANY'))
  42 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "SUPPLIER"."S_SUPPKEY")
  43 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  44 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  45 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(4): "SUPPLIER"."S_NATIONKEY")
  46 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(4): "N1"."N_NATIONKEY")
  47 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  48 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  49 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : access("N1"."N_NAME" IN ('GERMANY', 'FRANCE'))

134 rows fetched.

SQL> 
SQL> explain -- Q8: National Market Share Query
   2 select
   3 	o_year,
   4 	sum(case
   5 		when nation = 'BRAZIL'
   6 		then volume
   7 		else 0
   8 	end) / sum(volume) as mkt_share
   9 from (
  10 	select
  11 		extract(year from o_orderdate) as o_year,
  12 		l_extendedprice * (1-l_discount) as volume,
  13 		n2.n_name as nation
  14 	from
  15 		part,
  16 		supplier,
  17 		lineitem,
  18 		orders,
  19 		customer,
  20 		nation n1,
  21 		nation n2,
  22 		region
  23 	where
  24 		p_partkey = l_partkey
  25 		and s_suppkey = l_suppkey
  26 		and l_orderkey = o_orderkey
  27 		and o_custkey = c_custkey
  28 		and c_nationkey = n1.n_nationkey
  29 		and n1.n_regionkey = r_regionkey
  30 		and r_name = 'AMERICA'
  31 		and s_nationkey = n2.n_nationkey
  32 		and o_orderdate between date '1995-01-01' and date '1996-12-31'
  33 		and p_type = 'ECONOMY ANODIZED STEEL'
  34 	) all_nations
  35 group by
  36 	o_year
  37 order by
  38 	o_year;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 590591095                                       
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    SORT ORDER BY               |                      |            |      1000|    92795( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |      1000|    92513( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |      1000|    92513( 0)|                                |
|* 6 |       HASH GROUP               |                      |            |      1000|    92509( 0)|                                |
|  7 |        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |      1000|    92509( 0)|                                |
|* 8 |         PX SEND HASHED         | DEGREE_16,PART_64    |            |      1000|    92509( 0)|                                |
|* 9 |          HASH GROUP            |                      |            |      1000|    92509( 0)|                                |
| 10 |           RESULT               |                      |            |    245364|    92509( 0)|                                |
|*11 |            HASH JOIN INNER     |                      |            |    245364|    92495( 0)|                                |
| 12 |             JOIN FILTER USE    |                      |            |    245364|    92034( 0)|                                |
| 13 |              PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |    245364|    92034( 0)|                                |
|*14 |               PX SEND HASHED   | DEGREE_16,PART_0     |            |    245364|    92034( 0)|                                |
|*15 |                HASH JOIN INNER |                      |            |    245364|    92033( 0)|                                |
| 16 |                 JOIN FILTER USE|                      |            |   1000000|       33( 0)|                                |
| 17 |                  PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 18 |                   PART SCAN ALL|                      |            |   1000000|       33( 0)| [0,63]                         |
|*19 |                    TABLE ACCESS FULL| SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*20 |                 JOIN FILTER CREATE|                      |            |    245426|    91725( 0)|                                |
| 21 |                  PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |    245426|    91725( 0)|                                |
|*22 |                   PX SEND HASHED| DEGREE_16,PART_64    |            |    245426|    91725( 0)|                                |
|*23 |                    HASH JOIN INNER|                      |            |    245426|    91725( 0)|                                |
| 24 |                     JOIN FILTER USE|                      |            |   1227132|    90710( 0)|                                |
|*25 |                      HASH JOIN INNER|                      |            |   1227132|    90710( 0)|                                |
| 26 |                       JOIN FILTER USE|                      |            |  15000000|      105( 0)|                                |
| 27 |                        PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  15000000|      105( 0)|                                |
| 28 |                         PART SCAN ALL|                      |            |  15000000|      105( 0)| [0,63]                         |
|*29 |                          TABLE ACCESS FULL| CUSTOMER             | REGRESS    |  15000000|      105( 0)|                                |
|*30 |                       JOIN FILTER CREATE|                      |            |   1227132|    87994( 0)|                                |
| 31 |                        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_4              |            |   1227132|    87994( 0)|                                |
|*32 |                         PX SEND HASHED| DEGREE_16,PART_64    |            |   1227132|    87994( 0)|                                |
|*33 |                          HASH JOIN INNER|                      |            |   1227132|    87991( 0)|                                |
| 34 |                           JOIN FILTER USE|                      |            |  45698260|      871( 0)|                                |
| 35 |                            PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  45698260|      871( 0)|                                |
| 36 |                             PART SCAN ALL|                      |            |  45698260|      871( 0)| [0,63]                         |
|*37 |                              TABLE ACCESS FULL| ORDERS               | REGRESS    |  45698260|      871( 0)|                                |
|*38 |                           JOIN FILTER CREATE|                      |            |   4027944|    78991( 0)|                                |
| 39 |                            PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_5              |            |   4027944|    78991( 0)|                                |
|*40 |                             PX SEND HASHED| DEGREE_16,PART_64    |            |   4027944|    78991( 0)|                                |
|*41 |                              HASH JOIN INNER|                      |            |   4027944|    78981( 0)|                                |
| 42 |                               JOIN FILTER USE|                      |            | 600037888|     4374( 0)|                                |
| 43 |                                PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_6              |            | 600037888|     4374( 0)|                                |
|*44 |                                 PX SEND HASHED| DEGREE_16,PART_64    |            | 600037888|     4374( 0)|                                |
| 45 |                                  PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 46 |                                   PART SCAN ALL|                      |            | 600037888|     2976( 0)| [0,63]                         |
|*47 |                                    TABLE ACCESS FULL| LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
|*48 |                               JOIN FILTER CREATE|                      |            |    134258|      162( 0)|                                |
| 49 |                                PX BLOCK ITERATOR HASHED| DEGREE_16            |            |    134258|      162( 0)|                                |
| 50 |                                 PART SCAN ALL|                      |            |    134258|      162( 0)| [0,63]                         |
|*51 |                                  TABLE ACCESS FULL| PART                 | REGRESS    |    134258|      162( 0)|                                |
|*52 |                     JOIN FILTER CREATE|                      |            |         5|      862( 0)|                                |
| 53 |                      PX RECEIVER BROADCAST N2N COL| QUEUE_7              |            |         5|      862( 0)|                                |
| 54 |                       PX SEND BROADCAST| DEGREE_16,PART_64    |            |         5|      862( 0)|                                |
|*55 |                        HASH JOIN INNER|                      |            |         5|      862( 0)|                                |
| 56 |                         JOIN FILTER USE|                      |            |        25|      431( 0)|                                |
| 57 |                          PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_8              |            |        25|      431( 0)|                                |
|*58 |                           PX SEND HASHED| DEGREE_1,PART_0      |            |        25|      431( 0)|                                |
|*59 |                            TABLE ACCESS FULL| NATION               | REGRESS    |        25|      431( 0)|                                |
|*60 |                         JOIN FILTER CREATE|                      |            |         1|      431( 0)|                                |
| 61 |                          PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_9              |            |         1|      431( 0)|                                |
|*62 |                           PX SEND HASHED| DEGREE_1,PART_0      |            |         1|      431( 0)|                                |
|*63 |                            TABLE ACCESS FULL| REGION               | REGRESS    |         1|      431( 0)|                                |
|*64 |             JOIN FILTER CREATE |                      |            |        25|      431( 0)|                                |
| 65 |              PX RECEIVER REDISTRIBUTED I2N COL| QUEUE_10             |            |        25|      431( 0)|                                |
|*66 |               PX SEND HASHED   | DEGREE_1,PART_0      |            |        25|      431( 0)|                                |
| 67 |                TABLE ACCESS FULL| NATION               | REGRESS    |        25|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[1][NUMBER], RemoteTable[1][NUMBER], RemoteTable[1][INTEGER]
   2 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
   3 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
   6 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 2])               
   7 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
   8 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 2])                          
   9 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 2])               
  10 - Projection: CASE WHEN Tuple[0, 0] = 'BRAZIL' THEN Tuple[0, 1] ELSE 0 END [NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
  11 - Projection: Tuple[1, 1][CHAR, 25], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 0])                          
  15 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][NUMBER], Tuple[1, 2][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(5): "SUPPLIER"."S_SUPPKEY" AND RUNTIME USE(6): "SUPPLIER"."S_NATIONKEY")
  20 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(5): "LINEITEM"."L_SUPPKEY")
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 0])                          
  23 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  25 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][INTEGER], Tuple[1, 2][NUMBER], Tuple[1, 3][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  26 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  27 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  28 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  29 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "CUSTOMER"."C_CUSTKEY" AND RUNTIME USE(4): "CUSTOMER"."C_NATIONKEY")
  30 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "ORDERS"."O_CUSTKEY")
  31 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
  32 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER], Tuple[0, 3][INTEGER]
                   access(Tuple[0, 0])                          
  33 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][INTEGER], Tuple[1, 2][NUMBER], Tuple[0, 2][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  34 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  35 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  36 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  37 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], EXTRACT(YEAR FROM Tuple[0, 4])[INTEGER]
       Predicate : access("ORDERS"."O_ORDERDATE" >= '1995-01-01' AND "ORDERS"."O_ORDERDATE"  <= '1996-12-31')
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "ORDERS"."O_ORDERKEY")
  38 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "LINEITEM"."L_ORDERKEY")
  39 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER]
  40 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER]
                   access(Tuple[0, 0])                          
  41 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  42 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER]
  43 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER]
  44 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER]
                   access(Tuple[0, 0])                          
  45 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER]
  46 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER]
  47 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "LINEITEM"."L_PARTKEY")
  48 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "PART"."P_PARTKEY")
  49 - Projection: Tuple[0, 0][INTEGER]                         
  50 - Projection: Tuple[0, 0][INTEGER]                         
  51 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("PART"."P_TYPE" = 'ECONOMY ANODIZED STEEL')
  52 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(4): "N1"."N_NATIONKEY")
  53 - Projection: Tuple[0, 0][INTEGER]                         
  54 - Projection: Tuple[0, 0][INTEGER]                         
  55 - Projection: Tuple[0, 1][INTEGER]                         
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  56 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  57 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  58 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  59 - Projection: Tuple[0, 2][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(3): "N1"."N_REGIONKEY")
  60 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "REGION"."R_REGIONKEY")
  61 - Projection: Tuple[0, 0][INTEGER]                         
  62 - Projection: Tuple[0, 0][INTEGER]                         
                   access(Tuple[0, 0])                          
  63 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("REGION"."R_NAME" = 'AMERICA')        
  64 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(6): "N2"."N_NATIONKEY")
  65 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  66 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
                   access(Tuple[0, 0])                          
  67 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  

179 rows fetched.

SQL> 
SQL> explain -- Q9: Product Type Profit Measure Query
   2 select
   3 	nation,
   4 	o_year,
   5 	sum(amount) as sum_profit
   6 from (
   7 	select
   8 		n_name as nation,
   9 		extract(year from o_orderdate) as o_year,
  10 		l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
  11 	from
  12 		part,
  13 		supplier,
  14 		lineitem,
  15 		partsupp,
  16 		orders,
  17 		nation
  18 	where
  19 		s_suppkey = l_suppkey
  20 		and ps_suppkey = l_suppkey
  21 		and ps_partkey = l_partkey
  22 		and p_partkey = l_partkey
  23 		and o_orderkey = l_orderkey
  24 		and s_nationkey = n_nationkey
  25 		and p_name like '%green%'
  26 	) profit
  27 group by
  28 	nation,
  29 	o_year
  30 order by
  31 	nation,
  32 	o_year desc;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 1829722309                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    SORT ORDER BY               |                      |            |      1000|   127622( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |      1000|   127339( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |      1000|   127339( 0)|                                |
|* 6 |       HASH GROUP               |                      |            |      1000|   127336( 0)|                                |
|  7 |        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |      1000|   127336( 0)|                                |
|* 8 |         PX SEND HASHED         | DEGREE_16,PART_64    |            |      1000|   127336( 0)|                                |
|* 9 |          HASH GROUP            |                      |            |      1000|   127336( 0)|                                |
| 10 |           RESULT               |                      |            |  23994880|   127249( 0)|                                |
|*11 |            HASH JOIN INNER     |                      |            |  23994880|   125960( 0)|                                |
| 12 |             JOIN FILTER USE    |                      |            | 150000000|      563( 0)|                                |
| 13 |              PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 150000000|      563( 0)|                                |
| 14 |               PART SCAN ALL    |                      |            | 150000000|      563( 0)| [0,63]                         |
|*15 |                TABLE ACCESS FULL| ORDERS               | REGRESS    | 150000000|      563( 0)|                                |
|*16 |             JOIN FILTER CREATE |                      |            |  23994910|    92118( 0)|                                |
| 17 |              PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |  23994910|    92118( 0)|                                |
|*18 |               PX SEND HASHED   | DEGREE_16,PART_64    |            |  23994910|    92118( 0)|                                |
|*19 |                HASH JOIN INNER |                      |            |  23994910|    92062( 0)|                                |
| 20 |                 JOIN FILTER USE|                      |            | 600037888|     4374( 0)|                                |
| 21 |                  PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            | 600037888|     4374( 0)|                                |
|*22 |                   PX SEND HASHED| DEGREE_16,PART_64    |            | 600037888|     4374( 0)|                                |
| 23 |                    PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 24 |                     PART SCAN ALL|                      |            | 600037888|     2976( 0)| [0,63]                         |
|*25 |                      TABLE ACCESS FULL| LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
|*26 |                 JOIN FILTER CREATE|                      |            |   1599578|    12345( 0)|                                |
|*27 |                  HASH JOIN INNER|                      |            |   1599578|    12345( 0)|                                |
| 28 |                   JOIN FILTER USE|                      |            |   1599982|    10943( 0)|                                |
| 29 |                    PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_4              |            |   1599982|    10943( 0)|                                |
|*30 |                     PX SEND HASHED| DEGREE_16,PART_64    |            |   1599982|    10943( 0)|                                |
|*31 |                      HASH JOIN INNER|                      |            |   1599982|    10939( 0)|                                |
| 32 |                       JOIN FILTER USE|                      |            |  80000000|      618( 0)|                                |
| 33 |                        PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  80000000|      618( 0)|                                |
| 34 |                         PART SCAN ALL|                      |            |  80000000|      618( 0)| [0,63]                         |
|*35 |                          TABLE ACCESS FULL| PARTSUPP             | REGRESS    |  80000000|      618( 0)|                                |
|*36 |                       JOIN FILTER CREATE|                      |            |    400000|      162( 0)|                                |
| 37 |                        PX BLOCK ITERATOR HASHED| DEGREE_16            |            |    400000|      162( 0)|                                |
| 38 |                         PART SCAN ALL|                      |            |    400000|      162( 0)| [0,63]                         |
|*39 |                          TABLE ACCESS FULL| PART                 | REGRESS    |    400000|      162( 0)|                                |
|*40 |                   JOIN FILTER CREATE|                      |            |   1000000|      591( 0)|                                |
|*41 |                    HASH JOIN INNER|                      |            |   1000000|      591( 0)|                                |
| 42 |                     JOIN FILTER USE|                      |            |   1000000|       33( 0)|                                |
| 43 |                      PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 44 |                       PART SCAN ALL|                      |            |   1000000|       33( 0)| [0,63]                         |
|*45 |                        TABLE ACCESS FULL| SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*46 |                     JOIN FILTER CREATE|                      |            |        25|      434( 0)|                                |
| 47 |                      PX RECEIVER BROADCAST I2N COL| QUEUE_5              |            |        25|      434( 0)|                                |
| 48 |                       PX SEND BROADCAST| DEGREE_1,PART_64     |            |        25|      434( 0)|                                |
| 49 |                        TABLE ACCESS FULL| NATION               | REGRESS    |        25|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[1][NUMBER], RemoteTable[1][CHAR, 25], RemoteTable[1][INTEGER]
   2 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
   3 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
   6 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2])  
   7 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
   8 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 1], Tuple[0, 2])             
   9 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2])  
  10 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][INTEGER]
  11 - Projection: Tuple[1, 1][NUMBER], Tuple[1, 2][CHAR, 25], Tuple[0, 1][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  15 - Projection: Tuple[0, 0][INTEGER], EXTRACT(YEAR FROM Tuple[0, 4])[INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME USE(4): "ORDERS"."O_ORDERKEY")
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(4): "LINEITEM"."L_ORDERKEY")
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][CHAR, 25]
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER], Tuple[0, 2][CHAR, 25]
                   access(Tuple[0, 0])                          
  19 - Projection: Tuple[0, 2][INTEGER], Tuple[0, 4]-Tuple[1, 2]*Tuple[0, 3][NUMBER], Tuple[1, 3][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0] AND Tuple[0, 1] = Tuple[1, 1])
  20 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][NUMBER]
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][NUMBER]
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][NUMBER]
                   access(Tuple[0, 1])                          
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][NUMBER]
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][NUMBER]
  25 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER]
       Predicate : RUNTIME FILTER(RUNTIME USE(3): "LINEITEM"."L_PARTKEY", "LINEITEM"."L_SUPPKEY")
  26 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)], Tuple[0, 3][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "PARTSUPP"."PS_PARTKEY", "PARTSUPP"."PS_SUPPKEY")
  27 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 2][NUMBER, (15, 2)], Tuple[1, 1][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  28 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)]
  29 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)]
  30 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)]
                   access(Tuple[0, 0])                          
  31 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 2][NUMBER, (15, 2)]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  32 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)]
  33 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)]
  34 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER, (15, 2)]
  35 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 3][NUMBER, (15, 2)]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "PARTSUPP"."PS_PARTKEY" AND RUNTIME USE(2): "PARTSUPP"."PS_SUPPKEY")
  36 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "PART"."P_PARTKEY")
  37 - Projection: Tuple[0, 0][INTEGER]                         
  38 - Projection: Tuple[0, 0][INTEGER]                         
  39 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : filter(Tuple[0, 1] LIKE '%green%')           
  40 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "SUPPLIER"."S_SUPPKEY")
  41 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][CHAR, 25]  
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  42 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  43 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  44 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  45 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "SUPPLIER"."S_NATIONKEY")
  46 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "NATION"."N_NATIONKEY")
  47 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  48 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  49 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  

131 rows fetched.

SQL> 
SQL> explain -- Q10: Returned Item Reporting Query
   2 select
   3 	c_custkey,
   4 	c_name,
   5 	sum(l_extendedprice * (1 - l_discount)) as revenue,
   6 	c_acctbal,
   7 	n_name,
   8 	c_address,
   9 	c_phone,
  10 	c_comment
  11 from
  12 	customer,
  13 	orders,
  14 	lineitem,
  15 	nation
  16 where
  17 	c_custkey = o_custkey
  18 	and l_orderkey = o_orderkey
  19 	and o_orderdate >= date '1993-10-01'
  20 	and o_orderdate < date '1993-10-01' + interval '3' month
  21 	and l_returnflag = 'R'
  22 	and c_nationkey = n_nationkey
  23 group by
  24 	c_custkey,
  25 	c_name,
  26 	c_acctbal,
  27 	c_phone,
  28 	n_name,
  29 	c_address,
  30 	c_comment
  31 order by
  32 	revenue desc
  33 limit 100;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 397835399                                       
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    WINDOW                      |                      |            |       100|  8400457( 0)|                                |
|  4 |     TOP SORT                   |                      |            |  12455733|  8400434( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |  12455733|    77263( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |  12455733|    77263( 0)|                                |
|* 7 |        HASH GROUP              |                      |            |  12455733|    35015( 0)|                                |
|  8 |         PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |  12455733|    34286( 0)|                                |
|* 9 |          PX SEND HASHED        | DEGREE_16,PART_64    |            |  12455733|    34286( 0)|                                |
|*10 |           HASH JOIN INNER      |                      |            |  12455733|    34257( 0)|                                |
| 11 |            JOIN FILTER USE     |                      |            | 148067264|     4210( 0)|                                |
| 12 |             PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 148067264|     4210( 0)|                                |
| 13 |              PART SCAN ALL     |                      |            | 148067264|     4210( 0)| [0,63]                         |
|*14 |               TABLE ACCESS FULL| LINEITEM             | REGRESS    | 148067264|     4210( 0)|                                |
|*15 |            JOIN FILTER CREATE  |                      |            |   6227875|     7884( 0)|                                |
| 16 |             PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |   6227875|     7884( 0)|                                |
|*17 |              PX SEND HASHED    | DEGREE_16,PART_64    |            |   6227875|     7884( 0)|                                |
|*18 |               HASH JOIN INNER  |                      |            |   6227875|     7869( 0)|                                |
| 19 |                JOIN FILTER USE |                      |            |   6227874|     6663( 0)|                                |
|*20 |                 HASH JOIN INNER|                      |            |   6227874|     6663( 0)|                                |
| 21 |                  JOIN FILTER USE|                      |            |  15000000|      105( 0)|                                |
| 22 |                   PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  15000000|      105( 0)|                                |
| 23 |                    PART SCAN ALL|                      |            |  15000000|      105( 0)| [0,63]                         |
|*24 |                     TABLE ACCESS FULL| CUSTOMER             | REGRESS    |  15000000|      105( 0)|                                |
|*25 |                  JOIN FILTER CREATE|                      |            |   6227875|      886( 0)|                                |
| 26 |                   PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |   6227875|      886( 0)|                                |
|*27 |                    PX SEND HASHED| DEGREE_16,PART_64    |            |   6227875|      886( 0)|                                |
| 28 |                     PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   6227875|      871( 0)|                                |
| 29 |                      PART SCAN ALL|                      |            |   6227875|      871( 0)| [0,63]                         |
|*30 |                       TABLE ACCESS FULL| ORDERS               | REGRESS    |   6227875|      871( 0)|                                |
|*31 |                JOIN FILTER CREATE|                      |            |        25|      434( 0)|                                |
| 32 |                 PX RECEIVER BROADCAST I2N COL| QUEUE_4              |            |        25|      434( 0)|                                |
| 33 |                  PX SEND BROADCAST| DEGREE_1,PART_64     |            |        25|      434( 0)|                                |
| 34 |                   TABLE ACCESS FULL| NATION               | REGRESS    |        25|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[4][INTEGER], RemoteTable[4][VARCHAR, 25], RemoteTable[4][NUMBER], RemoteTable[4][NUMBER, (15, 2)], RemoteTable[4][CHAR, 25], RemoteTable[4][VARCHAR, 40], RemoteTable[4][CHAR, 15], RemoteTable[4][VARCHAR, 117]
   2 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][NUMBER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 25], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][CHAR, 15], Tuple[0, 7][VARCHAR, 117]
   3 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 0][NUMBER], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 4][CHAR, 15], Tuple[0, 7][VARCHAR, 117]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
   6 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
   7 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3], Tuple[0, 4], Tuple[0, 5], Tuple[0, 6], Tuple[0, 7])
   8 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
   9 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
                   access(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3], Tuple[0, 4], Tuple[0, 5], Tuple[0, 6], Tuple[0, 7])
  10 - Projection: Tuple[0, 1][NUMBER], Tuple[1, 1][INTEGER], Tuple[1, 2][VARCHAR, 25], Tuple[1, 3][NUMBER, (15, 2)], Tuple[1, 4][CHAR, 15], Tuple[1, 5][CHAR, 25], Tuple[1, 6][VARCHAR, 40], Tuple[1, 7][VARCHAR, 117]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER]
       Predicate : access("LINEITEM"."L_RETURNFLAG" = 'R')      
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "LINEITEM"."L_ORDERKEY")
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "ORDERS"."O_ORDERKEY")
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
                   access(Tuple[0, 0])                          
  18 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][VARCHAR, 25], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5][CHAR, 15], Tuple[1, 1][CHAR, 25], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][VARCHAR, 25], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5][CHAR, 15], Tuple[0, 6][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
  20 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 1][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][VARCHAR, 117]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][VARCHAR, 117]
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][VARCHAR, 117]
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 5][VARCHAR, 40], Tuple[0, 6][VARCHAR, 117]
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][INTEGER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 5][NUMBER, (15, 2)], Tuple[0, 4][CHAR, 15], Tuple[0, 2][VARCHAR, 40], Tuple[0, 7][VARCHAR, 117]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "CUSTOMER"."C_CUSTKEY" AND RUNTIME USE(1): "CUSTOMER"."C_NATIONKEY")
  25 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "ORDERS"."O_CUSTKEY")
  26 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  27 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  28 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  29 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  30 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : access("ORDERS"."O_ORDERDATE" >= '1993-10-01' AND "ORDERS"."O_ORDERDATE"  < '1994-01-01')
  31 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "NATION"."N_NATIONKEY")
  32 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  33 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
  34 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  

94 rows fetched.

SQL> 
SQL> explain -- Q11: Important Stock Identification Query
   2 select
   3 	ps_partkey,
   4 	sum(ps_supplycost * ps_availqty) as value
   5 from
   6 	partsupp,
   7 	supplier,
   8 	nation
   9 where
  10 	ps_suppkey = s_suppkey
  11 	and s_nationkey = n_nationkey
  12 	and n_name = 'GERMANY'
  13 group by
  14 	ps_partkey having
  15 		sum(ps_supplycost * ps_availqty) > (
  16 			select
  17 				sum(ps_supplycost * ps_availqty) * 0.0001
  18 			from
  19 				partsupp,
  20 				supplier,
  21 				nation
  22 			where
  23 				ps_suppkey = s_suppkey
  24 				and s_nationkey = n_nationkey
  25 				and n_name = 'GERMANY'
  26 		)
  27 order by
  28 	value desc,
  29 	ps_partkey desc;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 857425779                                       
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  RESULT                        | QUERY[1]             |            |          |             |                                |
|  2 |   AGGREGATE                    |                      |            |         1|    11348( 0)|                                |
|  3 |    PX RECEIVER GATHER N2I COL  | QUEUE_4              |            |         1|    11348( 0)|                                |
|  4 |     PX SEND RANDOM             | DEGREE_16,PART_0     |            |         1|    11348( 0)|                                |
|  5 |      AGGREGATE                 |                      |            |         1|    11348( 0)|                                |
|* 6 |       HASH JOIN INNER          |                      |            |   3200000|    11332( 0)|                                |
|  7 |        JOIN FILTER USE         |                      |            |  80000000|      804( 0)|                                |
|  8 |         PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_5              |            |  80000000|      804( 0)|                                |
|* 9 |          PX SEND HASHED        | DEGREE_16,PART_64    |            |  80000000|      804( 0)|                                |
| 10 |           PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  80000000|      618( 0)|                                |
| 11 |            PART SCAN ALL       |                      |            |  80000000|      618( 0)| [0,63]                         |
|*12 |             TABLE ACCESS FULL  | PARTSUPP             | REGRESS    |  80000000|      618( 0)|                                |
|*13 |        JOIN FILTER CREATE      |                      |            |     40000|      588( 0)|                                |
|*14 |         HASH JOIN INNER        |                      |            |     40000|      588( 0)|                                |
| 15 |          JOIN FILTER USE       |                      |            |   1000000|       33( 0)|                                |
| 16 |           PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 17 |            PART SCAN ALL       |                      |            |   1000000|       33( 0)| [0,63]                         |
|*18 |             TABLE ACCESS FULL  | SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*19 |          JOIN FILTER CREATE    |                      |            |         1|      431( 0)|                                |
| 20 |           PX RECEIVER BROADCAST I2N COL| QUEUE_6              |            |         1|      431( 0)|                                |
| 21 |            PX SEND BROADCAST   | DEGREE_1,PART_64     |            |         1|      431( 0)|                                |
|*22 |             TABLE ACCESS FULL  | NATION               | REGRESS    |         1|      431( 0)|                                |
| 23 |  COL TO ROW                    |                      |            |          |             |                                |
| 24 |   PX COORDINATOR               |                      |            |          |             |                                |
| 25 |    SORT ORDER BY               |                      |            |     87120|    56682( 0)|                                |
| 26 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |     87120|    16150( 0)|                                |
| 27 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |     87120|    16150( 0)|                                |
|*28 |       HASH GROUP               |                      |            |     87120|    15854( 0)|                                |
| 29 |        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |    264000|    15853( 0)|                                |
|*30 |         PX SEND HASHED         | DEGREE_16,PART_64    |            |    264000|    15853( 0)|                                |
|*31 |          HASH GROUP            |                      |            |    264000|     4504( 0)|                                |
|*32 |           HASH JOIN INNER      |                      |            |    800000|     4499( 0)|                                |
| 33 |            JOIN FILTER USE     |                      |            |  20000000|     1407( 0)|                                |
|*34 |             HASH GROUP         |                      |            |  20000000|     1407( 0)|                                |
| 35 |              PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |  80000000|      804( 0)|                                |
|*36 |               PX SEND HASHED   | DEGREE_16,PART_64    |            |  80000000|      804( 0)|                                |
| 37 |                PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  80000000|      618( 0)|                                |
| 38 |                 PART SCAN ALL  |                      |            |  80000000|      618( 0)| [0,63]                         |
|*39 |                  TABLE ACCESS FULL| PARTSUPP             | REGRESS    |  80000000|      618( 0)|                                |
|*40 |            JOIN FILTER CREATE  |                      |            |     40000|      588( 0)|                                |
|*41 |             HASH JOIN INNER    |                      |            |     40000|      588( 0)|                                |
| 42 |              JOIN FILTER USE   |                      |            |   1000000|       33( 0)|                                |
| 43 |               PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 44 |                PART SCAN ALL   |                      |            |   1000000|       33( 0)| [0,63]                         |
|*45 |                 TABLE ACCESS FULL| SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*46 |              JOIN FILTER CREATE|                      |            |         1|      431( 0)|                                |
| 47 |               PX RECEIVER BROADCAST I2N COL| QUEUE_3              |            |         1|      431( 0)|                                |
| 48 |                PX SEND BROADCAST| DEGREE_1,PART_64     |            |         1|      431( 0)|                                |
|*49 |                 TABLE ACCESS FULL| NATION               | REGRESS    |         1|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: Tuple[0, 0]*.0001[NUMBER]                    
   2 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   3 - Projection: Tuple[0, 0][NUMBER]                          
   4 - Projection: Tuple[0, 0][NUMBER]                          
   5 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   6 - Projection: Tuple[0, 1][NUMBER]                          
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
   7 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
   8 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
                   access(Tuple[0, 0])                          
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  12 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 3]*Tuple[0, 2][NUMBER]
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "PARTSUPP"."PS_SUPPKEY")
  13 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "SUPPLIER"."S_SUPPKEY")
  14 - Projection: Tuple[0, 1][INTEGER]                         
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  18 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "SUPPLIER"."S_NATIONKEY")
  19 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "NATION"."N_NATIONKEY")
  20 - Projection: Tuple[0, 0][INTEGER]                         
  21 - Projection: Tuple[0, 0][INTEGER]                         
  22 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("NATION"."N_NAME" = 'GERMANY')        
  23 - Projection: RemoteTable[3][NUMBER], RemoteTable[3][INTEGER]
  24 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  25 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  26 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  27 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  28 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : filter(Tuple[0, 0] > QUERY[1])               
                   group expressions(Tuple[0, 1])               
  29 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  30 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
                   access(Tuple[0, 1])                          
  31 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  32 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
       Predicate : access(Tuple[0, 2] = Tuple[1, 0])            
  33 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  34 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  35 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  36 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 2])                          
  37 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  38 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  39 - Projection: Tuple[0, 3]*Tuple[0, 2][NUMBER], Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME USE(3): "PARTSUPP"."PS_SUPPKEY")
  40 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "SUPPLIER"."S_SUPPKEY")
  41 - Projection: Tuple[0, 1][INTEGER]                         
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  42 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  43 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  44 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  45 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "SUPPLIER"."S_NATIONKEY")
  46 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "NATION"."N_NATIONKEY")
  47 - Projection: Tuple[0, 0][INTEGER]                         
  48 - Projection: Tuple[0, 0][INTEGER]                         
  49 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("NATION"."N_NAME" = 'GERMANY')        

131 rows fetched.

SQL> 
SQL> explain -- Q12: Shipping Modes and Order Priority Query
   2 select
   3 	l_shipmode,
   4 	sum(case
   5 		when o_orderpriority = '1-URGENT'
   6 			or o_orderpriority = '2-HIGH'
   7 		then 1
   8 		else 0
   9 	end) as high_line_count,
  10 	sum(case
  11 		when o_orderpriority <> '1-URGENT'
  12 			and o_orderpriority <> '2-HIGH'
  13 		then 1
  14 		else 0
  15 	end) as low_line_count
  16 from
  17 	orders,
  18 	lineitem
  19 where
  20 	o_orderkey = l_orderkey
  21 	and l_shipmode in ('MAIL', 'SHIP')
  22 	and l_commitdate < l_receiptdate
  23 	and l_shipdate < l_commitdate
  24 	and l_receiptdate >= date '1994-01-01'
  25 	and l_receiptdate < date '1994-01-01' + interval '1' year
  26 group by
  27 	l_shipmode
  28 order by
  29 	l_shipmode;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 2995642251                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   SORT ORDER BY                |                      |            |         3|    34649( 0)|                                |
|* 3 |    HASH GROUP                  |                      |            |         3|    34649( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |         3|    34649( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |         3|    34649( 0)|                                |
|* 6 |       HASH GROUP               |                      |            |         3|    34649( 0)|                                |
|* 7 |        HASH JOIN INNER         |                      |            |  14319954|    34597( 0)|                                |
|  8 |         JOIN FILTER USE        |                      |            | 150000000|      563( 0)|                                |
|  9 |          PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 150000000|      563( 0)|                                |
| 10 |           PART SCAN ALL        |                      |            | 150000000|      563( 0)| [0,63]                         |
|*11 |            TABLE ACCESS FULL   | ORDERS               | REGRESS    | 150000000|      563( 0)|                                |
|*12 |         JOIN FILTER CREATE     |                      |            |  14319954|     6677( 0)|                                |
| 13 |          PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  14319954|     6677( 0)|                                |
| 14 |           PART SCAN ALL        |                      |            |  14319954|     6677( 0)| [0,63]                         |
|*15 |            TABLE ACCESS FULL   | LINEITEM             | REGRESS    |  14319954|     6677( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[2][NUMBER], RemoteTable[2][NUMBER], RemoteTable[2][CHAR, 10]
   2 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][CHAR, 10]
   3 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER], Tuple[0, 2][CHAR, 10]
       Predicate : group expressions(Tuple[0, 2])               
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][CHAR, 10]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER], Tuple[0, 2][CHAR, 10]
   6 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER], Tuple[0, 2][CHAR, 10]
       Predicate : group expressions(Tuple[0, 2])               
   7 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[1, 1][CHAR, 10]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
   8 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  11 - Projection: Tuple[0, 0][INTEGER], CASE WHEN Tuple[0, 5] = '1-URGENT' OR Tuple[0, 5] = '2-HIGH' THEN 1 ELSE 0 END [INTEGER], CASE WHEN Tuple[0, 5] <> '1-URGENT' AND Tuple[0, 5] <> '2-HIGH' THEN 1 ELSE 0 END [INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "ORDERS"."O_ORDERKEY")
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "LINEITEM"."L_ORDERKEY")
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10]  
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10]  
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 14][CHAR, 10] 
       Predicate : access("LINEITEM"."L_SHIPMODE" IN ('MAIL', 'SHIP') AND "LINEITEM"."L_SHIPDATE" < '1995-01-01' AND "LINEITEM"."L_RECEIPTDATE" >= '1994-01-01' AND "LINEITEM"."L_RECEIPTDATE"  < '1995-01-01' AND "LINEITEM"."L_COMMITDATE" < '1995-01-01')
                   filter(Tuple[0, 10] < Tuple[0, 11] AND Tuple[0, 10] < Tuple[0, 12] AND Tuple[0, 11] < Tuple[0, 12])

49 rows fetched.

SQL> 
SQL> explain -- Q13: Customer Distribution Query
   2 select
   3     c_count,
   4     count(*) as custdist
   5 from (
   6     select
   7         c_custkey,
   8         count(o_orderkey) as c_count
   9     from
  10         customer left outer join orders on
  11             c_custkey = o_custkey
  12             and o_comment not like '%special%requests%'
  13     group by
  14         c_custkey
  15     ) c_orders
  16 group by
  17     c_count
  18 order by
  19     custdist desc,
  20     c_count desc;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 3402122535                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    SORT ORDER BY               |                      |            |      1000|    18279( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |      1000|    17996( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |      1000|    17996( 0)|                                |
|* 6 |       HASH GROUP               |                      |            |      1000|    17993( 0)|                                |
|  7 |        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |      1000|    17993( 0)|                                |
|* 8 |         PX SEND HASHED         | DEGREE_16,PART_64    |            |      1000|    17993( 0)|                                |
|* 9 |          HASH GROUP            |                      |            |      1000|    17993( 0)|                                |
| 10 |           RESULT               |                      |            |  15000000|    17939( 0)|                                |
|*11 |            HASH GROUP          |                      |            |  15000000|    17133( 0)|                                |
| 12 |             PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |  74250064|    16747( 0)|                                |
|*13 |              PX SEND HASHED    | DEGREE_16,PART_64    |            |  74250064|    16747( 0)|                                |
|*14 |               HASH JOIN RIGHT OUTER|                      |            |  74250064|    16574( 0)|                                |
| 15 |                JOIN FILTER USE |                      |            |  49500000|      986( 0)|                                |
| 16 |                 PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |  49500000|      986( 0)|                                |
|*17 |                  PX SEND HASHED| DEGREE_16,PART_64    |            |  49500000|      986( 0)|                                |
| 18 |                   PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  49500000|      871( 0)|                                |
| 19 |                    PART SCAN ALL|                      |            |  49500000|      871( 0)| [0,63]                         |
|*20 |                     TABLE ACCESS FULL| ORDERS               | REGRESS    |  49500000|      871( 0)|                                |
|*21 |                JOIN FILTER CREATE|                      |            |  15000000|      105( 0)|                                |
| 22 |                 PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  15000000|      105( 0)|                                |
| 23 |                  PART SCAN ALL |                      |            |  15000000|      105( 0)| [0,63]                         |
| 24 |                   TABLE ACCESS FULL| CUSTOMER             | REGRESS    |  15000000|      105( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[1][BIGINT], RemoteTable[1][BIGINT]
   2 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][BIGINT]     
   3 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][BIGINT]     
   4 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][BIGINT]     
   5 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][BIGINT]     
   6 - Projection: CAST(SUM(Tuple[0, 0]) AS BIGINT)[BIGINT], Tuple[0, 1][BIGINT]
       Predicate : group expressions(Tuple[0, 1])               
   7 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][BIGINT]     
   8 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][BIGINT]     
                   access(Tuple[0, 1])                          
   9 - Projection: COUNT(1)[BIGINT], Tuple[0, 0][BIGINT]        
       Predicate : group expressions(Tuple[0, 0])               
  10 - Projection: Tuple[0, 0][BIGINT]                          
  11 - Projection: COUNT(Tuple[0, 0])[BIGINT], Tuple[0, 1][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 1])                          
  14 - Projection: Tuple[0, 1][INTEGER], Tuple[1, 0][INTEGER]   
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  20 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : filter(Tuple[0, 8] NOT LIKE '%special%requests%')
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "ORDERS"."O_CUSTKEY")
  21 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "CUSTOMER"."C_CUSTKEY")
  22 - Projection: Tuple[0, 0][INTEGER]                         
  23 - Projection: Tuple[0, 0][INTEGER]                         
  24 - Projection: Tuple[0, 0][INTEGER]                         

70 rows fetched.

SQL> 
SQL> explain -- Q14: Promotion Effect Query
   2 select
   3 	100.00 * sum(case
   4 		when p_type like 'PROMO%'
   5 		then l_extendedprice*(1-l_discount)
   6 		else 0
   7 	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
   8 from
   9 	lineitem,
  10 	part
  11 where
  12 	l_partkey = p_partkey
  13 	and l_shipdate >= date '1995-09-01'
  14 	and l_shipdate < date '1995-09-01' + interval '1' month;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 1404664951                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    AGGREGATE                   |                      |            |         1|    10984( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |         1|    10984( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |         1|    10984( 0)|                                |
|  6 |       AGGREGATE                |                      |            |         1|    10984( 0)|                                |
|* 7 |        HASH JOIN INNER         |                      |            |   6738279|    10951( 0)|                                |
|  8 |         JOIN FILTER USE        |                      |            |  20000000|      121( 0)|                                |
|  9 |          PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  20000000|      121( 0)|                                |
| 10 |           PART SCAN ALL        |                      |            |  20000000|      121( 0)| [0,63]                         |
|*11 |            TABLE ACCESS FULL   | PART                 | REGRESS    |  20000000|      121( 0)|                                |
|*12 |         JOIN FILTER CREATE     |                      |            |   6738278|     4226( 0)|                                |
| 13 |          PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |   6738278|     4226( 0)|                                |
|*14 |           PX SEND HASHED       | DEGREE_16,PART_64    |            |   6738278|     4226( 0)|                                |
| 15 |            PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   6738278|     4210( 0)|                                |
| 16 |             PART SCAN ALL      |                      |            |   6738278|     4210( 0)| [0,63]                         |
|*17 |              TABLE ACCESS FULL | LINEITEM             | REGRESS    |   6738278|     4210( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[2][NUMBER], RemoteTable[2][NUMBER]
   2 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER]     
   3 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER]     
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][NUMBER]     
   6 - Projection: SUM(Tuple[0, 0])[NUMBER], SUM(Tuple[0, 1])[NUMBER]
   7 - Projection: CASE WHEN Tuple[0, 1] LIKE 'PROMO%' THEN Tuple[1, 1] ELSE 0 END [NUMBER], Tuple[1, 1][NUMBER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
   8 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25]
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25]
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25]
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 4][VARCHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "PART"."P_PARTKEY")
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "LINEITEM"."L_PARTKEY")
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
                   access(Tuple[0, 0])                          
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
  17 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER]
       Predicate : access("LINEITEM"."L_SHIPDATE" >= '1995-09-01' AND "LINEITEM"."L_SHIPDATE"  < '1995-10-01')

51 rows fetched.

SQL> 
SQL> explain -- Q15: Top Supplier Query
   2 select
   3 	s_suppkey,
   4 	s_name,
   5 	s_address,
   6 	s_phone,
   7 	total_revenue
   8 from
   9 	supplier,
  10 	revenue0
  11 where
  12 	s_suppkey = supplier_no
  13 	and total_revenue = (
  14         select
  15             max(total_revenue)
  16         from
  17             revenue0
  18 	)
  19 order by
  20 	s_suppkey;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 3841968779                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  RESULT                        | QUERY[1]             |            |          |             |                                |
|  2 |   AGGREGATE                    |                      |            |         1|     4331( 0)|                                |
|  3 |    PX RECEIVER GATHER N2I COL  | QUEUE_2              |            |         1|     4331( 0)|                                |
|  4 |     PX SEND RANDOM             | DEGREE_16,PART_0     |            |         1|     4331( 0)|                                |
|  5 |      AGGREGATE                 |                      |            |         1|     4331( 0)|                                |
|  6 |       RESULT                   |                      |            |    500000|     4329( 0)|                                |
|* 7 |        HASH GROUP              |                      |            |    500000|     4302( 0)|                                |
|  8 |         PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |    500000|     4296( 0)|                                |
|* 9 |          PX SEND HASHED        | DEGREE_16,PART_64    |            |    500000|     4296( 0)|                                |
|*10 |           HASH GROUP           |                      |            |    500000|     4295( 0)|                                |
| 11 |            PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  22437416|     4210( 0)|                                |
| 12 |             PART SCAN ALL      |                      |            |  22437416|     4210( 0)| [0,63]                         |
|*13 |              TABLE ACCESS FULL | LINEITEM             | REGRESS    |  22437416|     4210( 0)|                                |
| 14 |  COL TO ROW                    |                      |            |          |             |                                |
| 15 |   PX COORDINATOR               |                      |            |          |             |                                |
| 16 |    SORT ORDER BY               |                      |            |     20000|    16963( 0)|                                |
| 17 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |     20000|     8862( 0)|                                |
| 18 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |     20000|     8862( 0)|                                |
|*19 |       HASH JOIN INNER          |                      |            |     20000|     8794( 0)|                                |
| 20 |        JOIN FILTER USE         |                      |            |   1000000|       33( 0)|                                |
| 21 |         PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 22 |          PART SCAN ALL         |                      |            |   1000000|       33( 0)| [0,63]                         |
|*23 |           TABLE ACCESS FULL    | SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*24 |        JOIN FILTER CREATE      |                      |            |     20000|     8624( 0)|                                |
| 25 |         RESULT                 |                      |            |     20000|     8624( 0)|                                |
|*26 |          HASH GROUP            |                      |            |       800|     8623( 0)|                                |
| 27 |           PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |     20000|     8623( 0)|                                |
|*28 |            PX SEND HASHED      | DEGREE_16,PART_64    |            |     20000|     8623( 0)|                                |
|*29 |             HASH GROUP         |                      |            |     20000|     4291( 0)|                                |
| 30 |              PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  22437416|     4210( 0)|                                |
| 31 |               PART SCAN ALL    |                      |            |  22437416|     4210( 0)| [0,63]                         |
|*32 |                TABLE ACCESS FULL| LINEITEM             | REGRESS    |  22437416|     4210( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: Tuple[0, 0][NUMBER]                          
   2 - Projection: MAX(Tuple[0, 0])[NUMBER]                     
   3 - Projection: Tuple[0, 0][NUMBER]                          
   4 - Projection: Tuple[0, 0][NUMBER]                          
   5 - Projection: MAX(Tuple[0, 0])[NUMBER]                     
   6 - Projection: Tuple[0, 0][NUMBER]                          
   7 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
   8 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
   9 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
                   access(Tuple[0, 1])                          
  10 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  11 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  12 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  13 - Projection: Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER], Tuple[0, 2][INTEGER]
       Predicate : access("LINEITEM"."L_SHIPDATE" >= '1996-01-01' AND "LINEITEM"."L_SHIPDATE"  < '1996-04-01')
  14 - Projection: RemoteTable[2][INTEGER], RemoteTable[2][CHAR, 25], RemoteTable[2][VARCHAR, 40], RemoteTable[2][CHAR, 15], RemoteTable[2][NUMBER]
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15], Tuple[0, 4][NUMBER]
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15], Tuple[0, 4][NUMBER]
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15], Tuple[0, 4][NUMBER]
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15], Tuple[0, 4][NUMBER]
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15], Tuple[1, 1][NUMBER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  20 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15]
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15]
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 3][CHAR, 15]
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40], Tuple[0, 4][CHAR, 15]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "SUPPLIER"."S_SUPPKEY")
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "REVENUE0"."SUPPLIER_NO")
  25 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][NUMBER]    
  26 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : filter(Tuple[0, 0] = QUERY[1])               
                   group expressions(Tuple[0, 1])               
  27 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  28 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
                   access(Tuple[0, 1])                          
  29 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  30 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  31 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][INTEGER]    
  32 - Projection: Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER], Tuple[0, 2][INTEGER]
       Predicate : access("LINEITEM"."L_SHIPDATE" >= '1996-01-01' AND "LINEITEM"."L_SHIPDATE"  < '1996-04-01')

88 rows fetched.

SQL> 
SQL> explain -- Q16: Parts/Supplier Relationship Query
   2 select
   3     p_brand,
   4     p_type,
   5     p_size,
   6     count(ps_suppkey) supplier_cnt
   7 from (
   8     select
   9         p_brand,
  10         p_type,
  11         p_size,
  12         ps_suppkey
  13     from
  14         partsupp,
  15         part
  16     where
  17         p_partkey = ps_partkey
  18         and p_brand <> 'Brand#45'
  19         and p_type not like 'MEDIUM POLISHED%'
  20         and p_size in (49, 14, 23, 45, 19, 3, 36, 9)
  21         and ps_suppkey not in (
  22             select
  23                 s_suppkey
  24             from
  25                 supplier
  26             where
  27                 s_comment like '%Customer%Complaints%'
  28         )
  29     group by p_brand, p_type, p_size,ps_suppkey	)
  30 group by
  31 	p_brand,
  32 	p_type,
  33 	p_size
  34 order by
  35 	supplier_cnt desc,
  36 	p_brand,
  37 	p_type,
  38 	p_size
  39 limit 100;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 2946823822                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    WINDOW                      |                      |            |       100|    11350( 0)|                                |
|  4 |     TOP SORT                   |                      |            |       229|    11350( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |       229|    11299( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |       229|    11299( 0)|                                |
|* 7 |        HASH GROUP              |                      |            |       229|    11298( 0)|                                |
|  8 |         RESULT                 |                      |            |       229|    11298( 0)|                                |
|* 9 |          HASH GROUP            |                      |            |       229|    11298( 0)|                                |
| 10 |           PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |       229|    11298( 0)|                                |
|*11 |            PX SEND HASHED      | DEGREE_16,PART_64    |            |       229|    11298( 0)|                                |
|*12 |             HASH JOIN INNER    |                      |            |       229|    11298( 0)|                                |
| 13 |              JOIN FILTER USE   |                      |            |    225265|      491( 0)|                                |
| 14 |               PX BLOCK ITERATOR HASHED| DEGREE_16            |            |    225265|      491( 0)|                                |
| 15 |                PART SCAN ALL   |                      |            |    225265|      491( 0)| [0,63]                         |
|*16 |                 TABLE ACCESS FULL| PART                 | REGRESS    |    225265|      491( 0)|                                |
|*17 |              JOIN FILTER CREATE|                      |            |     20318|    10767( 0)|                                |
| 18 |               PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |     20318|    10767( 0)|                                |
|*19 |                PX SEND HASHED  | DEGREE_16,PART_64    |            |     20318|    10767( 0)|                                |
|*20 |                 HASH JOIN ANTI |                      |            |     20318|    10766( 0)|                                |
| 21 |                  PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |  80000000|      804( 0)|                                |
|*22 |                   PX SEND HASHED| DEGREE_16,PART_64    |            |  80000000|      804( 0)|                                |
| 23 |                    PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  80000000|      618( 0)|                                |
| 24 |                     PART SCAN ALL|                      |            |  80000000|      618( 0)| [0,63]                         |
| 25 |                      TABLE ACCESS FULL| PARTSUPP             | REGRESS    |  80000000|      618( 0)|                                |
| 26 |                  PX BLOCK ITERATOR HASHED| DEGREE_16            |            |     20000|       35( 0)|                                |
| 27 |                   PART SCAN ALL|                      |            |     20000|       35( 0)| [0,63]                         |
|*28 |                    TABLE ACCESS FULL| SUPPLIER             | REGRESS    |     20000|       35( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[1][CHAR, 10], RemoteTable[1][VARCHAR, 25], RemoteTable[1][INTEGER], RemoteTable[1][BIGINT]
   2 - Projection: Tuple[0, 0][CHAR, 10], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][BIGINT]
   3 - Projection: Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER], Tuple[0, 0][BIGINT]
   4 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER]
   5 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER]
   6 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER]
   7 - Projection: COUNT(Tuple[0, 0])[BIGINT], Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3])
   8 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][CHAR, 10], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER]
   9 - Projection: Tuple[0, 0][CHAR, 10], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER]
       Predicate : group expressions(Tuple[0, 0], Tuple[0, 1], Tuple[0, 2], Tuple[0, 3])
  10 - Projection: Tuple[0, 0][CHAR, 10], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER]
  11 - Projection: Tuple[0, 0][CHAR, 10], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER]
                   access(Tuple[0, 0], Tuple[0, 1], Tuple[0, 2])
  12 - Projection: Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER], Tuple[1, 1][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER]
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER]
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10], Tuple[0, 2][VARCHAR, 25], Tuple[0, 3][INTEGER]
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][CHAR, 10], Tuple[0, 4][VARCHAR, 25], Tuple[0, 5][INTEGER]
       Predicate : access("PART"."P_SIZE" IN (49, 14, 23, 45, 19, 3, 36, 9))
                   filter(Tuple[0, 4] NOT LIKE 'MEDIUM POLISHED%' AND Tuple[0, 3] <> 'Brand#45')
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "PART"."P_PARTKEY")
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "PARTSUPP"."PS_PARTKEY")
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  20 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER]   
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
                   access(Tuple[0, 0])                          
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  24 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  25 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER]   
  26 - Projection: Tuple[0, 0][INTEGER]                         
  27 - Projection: Tuple[0, 0][INTEGER]                         
  28 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : filter(Tuple[0, 6] LIKE '%Customer%Complaints%')

80 rows fetched.

SQL> 
SQL> explain -- Q17: Small-Quantity-Order Revenue Query
   2 select
   3 	sum(l_extendedprice) / 7.0 as avg_yearly
   4 from
   5 	lineitem,
   6 	part
   7 where
   8 	p_partkey = l_partkey
   9 	and p_brand = 'Brand#23'
  10 	and p_container = 'MED BOX'
  11 	and l_quantity < (
  12 		select
  13 			0.2 * avg(l_quantity)
  14 		from
  15 			lineitem
  16 		where
  17 			l_partkey = p_partkey
  18 	);

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 3873823132                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    AGGREGATE                   |                      |            |         1|    88570( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |         1|    88570( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |         1|    88570( 0)|                                |
|  6 |       AGGREGATE                |                      |            |         1|    88570( 0)|                                |
|* 7 |        HASH JOIN INNER         |                      |            |   6242376|    88539( 0)|                                |
|  8 |         JOIN FILTER USE        |                      |            | 600037888|     4374( 0)|                                |
|  9 |          PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            | 600037888|     4374( 0)|                                |
|*10 |           PX SEND HASHED       | DEGREE_16,PART_64    |            | 600037888|     4374( 0)|                                |
| 11 |            PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 12 |             PART SCAN ALL      |                      |            | 600037888|     2976( 0)| [0,63]                         |
|*13 |              TABLE ACCESS FULL | LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
|*14 |         JOIN FILTER CREATE     |                      |            |    416000|     9547( 0)|                                |
|*15 |          HASH JOIN INNER       |                      |            |    416000|     9547( 0)|                                |
|*16 |           JOIN FILTER USE      |                      |            |  20000000|     6651( 0)|                                |
| 17 |            RESULT              |                      |            |  20000000|     6651( 0)|                                |
|*18 |             HASH GROUP         |                      |            |  20000000|     5577( 0)|                                |
| 19 |              PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |  20000000|     5348( 0)|                                |
|*20 |               PX SEND HASHED   | DEGREE_16,PART_64    |            |  20000000|     5348( 0)|                                |
|*21 |                HASH GROUP      |                      |            |  20000000|     5301( 0)|                                |
| 22 |                 PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 23 |                  PART SCAN ALL |                      |            | 600037888|     2976( 0)| [0,63]                         |
|*24 |                   TABLE ACCESS FULL| LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
|*25 |           JOIN FILTER CREATE   |                      |            |    416000|      162( 0)|                                |
| 26 |            PX BLOCK ITERATOR HASHED| DEGREE_16            |            |    416000|      162( 0)|                                |
| 27 |             PART SCAN ALL      |                      |            |    416000|      162( 0)| [0,63]                         |
|*28 |              TABLE ACCESS FULL | PART                 | REGRESS    |    416000|      162( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[3][NUMBER]                       
   2 - Projection: Tuple[0, 0][NUMBER]                          
   3 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   4 - Projection: Tuple[0, 0][NUMBER]                          
   5 - Projection: Tuple[0, 0][NUMBER]                          
   6 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   7 - Projection: Tuple[0, 2][NUMBER, (15, 2)]                 
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
                   filter(Tuple[0, 1] < Tuple[1, 1])            
   8 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER, (15, 2)]
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER, (15, 2)]
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER, (15, 2)]
                   access(Tuple[0, 0])                          
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER, (15, 2)]
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER, (15, 2)]
  13 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5][NUMBER, (15, 2)]
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "LINEITEM"."L_PARTKEY")
  14 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][NUMBER] 
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "PART"."P_PARTKEY")
  15 - Projection: Tuple[1, 0, 0][INTEGER], Tuple[0, 1][NUMBER] 
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER]    
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "LINEITEM"."L_PARTKEY")
  17 - Projection: Tuple[0, 2][INTEGER], .2*Tuple[0, 0]/Tuple[0, 1][NUMBER]
  18 - Projection: SUM(Tuple[0, 0])[NUMBER], CAST(SUM(Tuple[0, 1]) AS BIGINT)[BIGINT], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 2])               
  19 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][BIGINT], Tuple[0, 2][INTEGER]
  20 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][BIGINT], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 2])                          
  21 - Projection: SUM(Tuple[0, 0])[NUMBER], COUNT(Tuple[0, 0])[BIGINT], Tuple[0, 1][INTEGER]
       Predicate : group expressions(Tuple[0, 1])               
  22 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
  23 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
  24 - Projection: Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "LINEITEM"."L_PARTKEY")
  25 - Projection: Tuple[0, 0, 0][INTEGER]                      
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "PART"."P_PARTKEY")
  26 - Projection: Tuple[0, 0, 0][INTEGER]                      
  27 - Projection: Tuple[0, 0, 0][INTEGER]                      
  28 - Projection: Tuple[0, 0, 0][INTEGER]                      
       Predicate : access("PART"."P_CONTAINER" = 'MED BOX' AND "PART"."P_BRAND" = 'Brand#23')

81 rows fetched.

SQL> 
SQL> explain -- Q18: Large Volume Customer Query
   2 select
   3 	c_name,
   4 	c_custkey,
   5 	o_orderkey,
   6 	o_orderdate,
   7 	o_totalprice,
   8 	sum(l_quantity)
   9 from
  10 	customer,
  11 	orders,
  12 	lineitem
  13 where
  14 	o_orderkey in (
  15 		select
  16 			l_orderkey
  17 		from
  18 			lineitem
  19 		group by
  20 			l_orderkey having
  21 				sum(l_quantity) > 300
  22 	)
  23 	and c_custkey = o_custkey
  24 	and o_orderkey = l_orderkey
  25 group by
  26 	c_name,
  27 	c_custkey,
  28 	o_orderkey,
  29 	o_orderdate,
  30 	o_totalprice
  31 order by
  32 	o_totalprice desc,
  33 	o_orderdate
  34 limit 100;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 4285595382                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    WINDOW                      |                      |            |       100|   115810( 0)|                                |
|  4 |     TOP SORT                   |                      |            |     28802|   115810( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |     28802|   103714( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |     28802|   103714( 0)|                                |
|* 7 |        HASH GROUP              |                      |            |     28802|   103616( 0)|                                |
|* 8 |         HASH JOIN INNER        |                      |            |     28802|   103615( 0)|                                |
|  9 |          JOIN FILTER USE       |                      |            | 600037888|     2976( 0)|                                |
| 10 |           PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 11 |            PART SCAN ALL       |                      |            | 600037888|     2976( 0)| [0,63]                         |
|*12 |             TABLE ACCESS FULL  | LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
|*13 |          JOIN FILTER CREATE    |                      |            |      7200|    26271( 0)|                                |
| 14 |           PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |      7200|    26271( 0)|                                |
|*15 |            PX SEND HASHED      | DEGREE_16,PART_64    |            |      7200|    26271( 0)|                                |
|*16 |             HASH JOIN INNER    |                      |            |      7200|    26271( 0)|                                |
| 17 |              JOIN FILTER USE   |                      |            |  15000000|      105( 0)|                                |
| 18 |               PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  15000000|      105( 0)|                                |
| 19 |                PART SCAN ALL   |                      |            |  15000000|      105( 0)| [0,63]                         |
|*20 |                 TABLE ACCESS FULL| CUSTOMER             | REGRESS    |  15000000|      105( 0)|                                |
|*21 |              JOIN FILTER CREATE|                      |            |      7200|    24302( 0)|                                |
| 22 |               PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |      7200|    24302( 0)|                                |
|*23 |                PX SEND HASHED  | DEGREE_16,PART_64    |            |      7200|    24302( 0)|                                |
|*24 |                 HASH JOIN SEMI |                      |            |      7200|    24302( 0)|                                |
| 25 |                  JOIN FILTER USE|                      |            | 150000000|      563( 0)|                                |
| 26 |                   PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 150000000|      563( 0)|                                |
| 27 |                    PART SCAN ALL|                      |            | 150000000|      563( 0)| [0,63]                         |
|*28 |                     TABLE ACCESS FULL| ORDERS               | REGRESS    | 150000000|      563( 0)|                                |
|*29 |                  JOIN FILTER CREATE|                      |            |      7197|     5144( 0)|                                |
| 30 |                   RESULT       |                      |            |      7197|     5144( 0)|                                |
|*31 |                    HASH GROUP  |                      |            |      7197|     5144( 0)|                                |
| 32 |                     PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 33 |                      PART SCAN ALL|                      |            | 600037888|     2976( 0)| [0,63]                         |
| 34 |                       TABLE ACCESS FULL| LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[4][VARCHAR, 25], RemoteTable[4][INTEGER], RemoteTable[4][INTEGER], RemoteTable[4][DATE], RemoteTable[4][NUMBER, (15, 2)], RemoteTable[4][NUMBER]
   2 - Projection: Tuple[0, 0][VARCHAR, 25], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], Tuple[0, 3][DATE], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5][NUMBER]
   3 - Projection: Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER], Tuple[0, 4][DATE], Tuple[0, 5][NUMBER, (15, 2)], Tuple[0, 0][NUMBER]
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER], Tuple[0, 4][DATE], Tuple[0, 5][NUMBER, (15, 2)]
   5 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER], Tuple[0, 4][DATE], Tuple[0, 5][NUMBER, (15, 2)]
   6 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER], Tuple[0, 4][DATE], Tuple[0, 5][NUMBER, (15, 2)]
   7 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][INTEGER], Tuple[0, 4][DATE], Tuple[0, 5][NUMBER, (15, 2)]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2], Tuple[0, 3], Tuple[0, 4], Tuple[0, 5])
   8 - Projection: Tuple[0, 1][NUMBER, (15, 2)], Tuple[1, 1][VARCHAR, 25], Tuple[1, 2][INTEGER], Tuple[1, 0][INTEGER], Tuple[1, 3][DATE], Tuple[1, 4][NUMBER, (15, 2)]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)]
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)]
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)]
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 4][NUMBER, (15, 2)]
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "LINEITEM"."L_ORDERKEY")
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][DATE], Tuple[0, 4][NUMBER, (15, 2)]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "ORDERS"."O_ORDERKEY")
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][DATE], Tuple[0, 4][NUMBER, (15, 2)]
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 2][INTEGER], Tuple[0, 3][DATE], Tuple[0, 4][NUMBER, (15, 2)]
                   access(Tuple[0, 0])                          
  16 - Projection: Tuple[1, 1][INTEGER], Tuple[0, 1][VARCHAR, 25], Tuple[0, 0][INTEGER], Tuple[1, 2][DATE], Tuple[1, 3][NUMBER, (15, 2)]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25]
  18 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25]
  19 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25]
  20 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][VARCHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "CUSTOMER"."C_CUSTKEY")
  21 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][NUMBER, (15, 2)]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "ORDERS"."O_CUSTKEY")
  22 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][NUMBER, (15, 2)]
  23 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][NUMBER, (15, 2)]
                   access(Tuple[0, 0])                          
  24 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][NUMBER, (15, 2)]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  25 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][NUMBER, (15, 2)]
  26 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][NUMBER, (15, 2)]
  27 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][DATE], Tuple[0, 3][NUMBER, (15, 2)]
  28 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 4][DATE], Tuple[0, 3][NUMBER, (15, 2)]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "ORDERS"."O_ORDERKEY")
  29 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "VSQ$3@SEL$0"."L_ORDERKEY")
  30 - Projection: Tuple[0, 1][INTEGER]                         
  31 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER]
       Predicate : filter(Tuple[0, 0] > 300)                    
                   group expressions(Tuple[0, 1])               
  32 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
  33 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER]
  34 - Projection: Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 0][INTEGER]

94 rows fetched.

SQL> 
SQL> explain -- Q19: Discounted Revenue Query
   2 select
   3     sum(l_extendedprice * (1 - l_discount)) as revenue
   4 from
   5     lineitem,
   6     part
   7 where
   8     (
   9         p_partkey = l_partkey
  10         and p_brand = 'Brand#12'
  11         and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
  12         and l_quantity >= 1 and l_quantity <= 1 + 10
  13         and p_size between 1 and 5
  14         and l_shipmode in ('AIR', 'AIR REG')
  15         and l_shipinstruct = 'DELIVER IN PERSON'
  16     )
  17     or
  18     (
  19         p_partkey = l_partkey
  20         and p_brand = 'Brand#23'
  21         and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
  22         and l_quantity >= 10 and l_quantity <= 10 + 10
  23         and p_size between 1 and 10
  24         and l_shipmode in ('AIR', 'AIR REG')
  25         and l_shipinstruct = 'DELIVER IN PERSON'
  26     )
  27     or
  28     (
  29         p_partkey = l_partkey
  30         and p_brand = 'Brand#34'
  31         and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
  32         and l_quantity >= 20 and l_quantity <= 20 + 10
  33         and p_size between 1 and 15
  34         and l_shipmode in ('AIR', 'AIR REG')
  35         and l_shipinstruct = 'DELIVER IN PERSON'
  36     );

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 3206166072                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    AGGREGATE                   |                      |            |         1|     9787( 0)|                                |
|  4 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |         1|     9787( 0)|                                |
|  5 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |         1|     9787( 0)|                                |
|  6 |       AGGREGATE                |                      |            |         1|     9787( 0)|                                |
|* 7 |        HASH JOIN INNER         |                      |            |   1105135|     9781( 0)|                                |
|  8 |         JOIN FILTER USE        |                      |            |  13372429|     6709( 0)|                                |
|  9 |          PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |  13372429|     6709( 0)|                                |
|*10 |           PX SEND HASHED       | DEGREE_16,PART_64    |            |  13372429|     6709( 0)|                                |
| 11 |            PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  13372429|     6677( 0)|                                |
| 12 |             PART SCAN ALL      |                      |            |  13372429|     6677( 0)| [0,63]                         |
|*13 |              TABLE ACCESS FULL | LINEITEM             | REGRESS    |  13372429|     6677( 0)|                                |
|*14 |         JOIN FILTER CREATE     |                      |            |   1039442|      779( 0)|                                |
| 15 |          PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1039442|      779( 0)|                                |
| 16 |           PART SCAN ALL        |                      |            |   1039442|      779( 0)| [0,63]                         |
|*17 |            TABLE ACCESS FULL   | PART                 | REGRESS    |   1039442|      779( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[2][NUMBER]                       
   2 - Projection: Tuple[0, 0][NUMBER]                          
   3 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   4 - Projection: Tuple[0, 0][NUMBER]                          
   5 - Projection: Tuple[0, 0][NUMBER]                          
   6 - Projection: SUM(Tuple[0, 0])[NUMBER]                     
   7 - Projection: Tuple[0, 2][NUMBER]                          
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
                   filter(Tuple[1, 1] = 'Brand#34' AND Tuple[1, 2] IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') AND Tuple[0, 1] <= 30 AND Tuple[0, 1] >= 20 AND Tuple[1, 3] <= 15 OR Tuple[1, 1] = 'Brand#23' AND Tuple[1, 2] IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') AND Tuple[0, 1] <= 20 AND Tuple[0, 1] >= 10 AND Tuple[1, 3] <= 10 OR Tuple[1, 1] = 'Brand#12' AND Tuple[1, 2] IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') AND Tuple[1, 3] <= 5 AND Tuple[0, 1] <= 11 AND Tuple[0, 1] >= 1)
   8 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER]
   9 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER]
  10 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER]
                   access(Tuple[0, 0])                          
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER]
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][NUMBER]
  13 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 5]*(1-Tuple[0, 6])[NUMBER]
       Predicate : access("LINEITEM"."L_SHIPMODE" IN ('AIR', 'AIR REG') AND "LINEITEM"."L_QUANTITY" >= 1 AND "LINEITEM"."L_QUANTITY"  <= 30 AND "LINEITEM"."L_SHIPINSTRUCT" = 'DELIVER IN PERSON')
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "LINEITEM"."L_PARTKEY")
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10], Tuple[0, 2][CHAR, 10], Tuple[0, 3][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "PART"."P_PARTKEY")
  15 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10], Tuple[0, 2][CHAR, 10], Tuple[0, 3][INTEGER]
  16 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 10], Tuple[0, 2][CHAR, 10], Tuple[0, 3][INTEGER]
  17 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 3][CHAR, 10], Tuple[0, 6][CHAR, 10], Tuple[0, 5][INTEGER]
       Predicate : access("PART"."P_CONTAINER" IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK', 'SM CASE', 'SM BOX', 'SM PACK', 'SM PKG', 'LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') AND "PART"."P_BRAND" IN ('Brand#23', 'Brand#12', 'Brand#34') AND "PART"."P_SIZE" >= 1 AND "PART"."P_SIZE"  <= 15)

53 rows fetched.

SQL> 
SQL> explain -- Q20: Potential Part Promotion Query
   2 select
   3 	s_name,
   4 	s_address
   5 from
   6 	supplier,
   7 	nation
   8 where
   9 	s_suppkey in (
  10 		select
  11 			ps_suppkey
  12 		from
  13 			partsupp
  14 		where
  15 			ps_partkey in (
  16 				select
  17 					p_partkey
  18 				from
  19 					part
  20 				where
  21 					p_name like 'forest%'
  22 			)
  23 		and ps_availqty > (
  24 			select
  25 				0.5 * sum(l_quantity)
  26 			from
  27 				lineitem
  28 			where
  29 				l_partkey = ps_partkey
  30 				and l_suppkey = ps_suppkey
  31 				and l_shipdate >= date '1994-01-01'
  32 				and l_shipdate < date '1994-01-01' + interval '1' year
  33 		)
  34 	)
  35 	and s_nationkey = n_nationkey
  36 	and n_name = 'CANADA'
  37 order by
  38 	s_name
  39 limit 100;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 834517883                                       
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    WINDOW                      |                      |            |       100|    36713( 0)|                                |
|  4 |     TOP SORT                   |                      |            |     39990|    36713( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |     39990|    19381( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |     39990|    19381( 0)|                                |
|* 7 |        HASH JOIN RIGHT SEMI    |                      |            |     39990|    19245( 0)|                                |
|* 8 |         JOIN FILTER USE        |                      |            |    200065|    18607( 0)|                                |
|  9 |          RESULT                |                      |            |    200065|    18607( 0)|                                |
| 10 |           PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |    200065|    18597( 0)|                                |
|*11 |            PX SEND HASHED      | DEGREE_16,PART_64    |            |    200065|    18597( 0)|                                |
|*12 |             HASH JOIN INNER    |                      |            |    200065|    18596( 0)|                                |
|*13 |              JOIN FILTER USE   |                      |            |  10000000|     5438( 0)|                                |
| 14 |               RESULT           |                      |            |  10000000|     5438( 0)|                                |
|*15 |                HASH GROUP      |                      |            |  10000000|     4900( 0)|                                |
| 16 |                 PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |  89783064|     4419( 0)|                                |
|*17 |                  PX SEND HASHED| DEGREE_16,PART_64    |            |  89783064|     4419( 0)|                                |
| 18 |                   PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  89783064|     4210( 0)|                                |
| 19 |                    PART SCAN ALL|                      |            |  89783064|     4210( 0)| [0,63]                         |
|*20 |                     TABLE ACCESS FULL| LINEITEM             | REGRESS    |  89783064|     4210( 0)|                                |
|*21 |              JOIN FILTER CREATE|                      |            |   1600008|    10939( 0)|                                |
|*22 |               HASH JOIN SEMI   |                      |            |   1600008|    10939( 0)|                                |
| 23 |                JOIN FILTER USE |                      |            |  80000000|      618( 0)|                                |
| 24 |                 PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  80000000|      618( 0)|                                |
| 25 |                  PART SCAN ALL |                      |            |  80000000|      618( 0)| [0,63]                         |
|*26 |                   TABLE ACCESS FULL| PARTSUPP             | REGRESS    |  80000000|      618( 0)|                                |
|*27 |                JOIN FILTER CREATE|                      |            |    400000|      162( 0)|                                |
| 28 |                 PX BLOCK ITERATOR HASHED| DEGREE_16            |            |    400000|      162( 0)|                                |
| 29 |                  PART SCAN ALL |                      |            |    400000|      162( 0)| [0,63]                         |
|*30 |                   TABLE ACCESS FULL| PART                 | REGRESS    |    400000|      162( 0)|                                |
|*31 |         JOIN FILTER CREATE     |                      |            |     40000|      588( 0)|                                |
|*32 |          HASH JOIN INNER       |                      |            |     40000|      588( 0)|                                |
| 33 |           JOIN FILTER USE      |                      |            |   1000000|       33( 0)|                                |
| 34 |            PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 35 |             PART SCAN ALL      |                      |            |   1000000|       33( 0)| [0,63]                         |
|*36 |              TABLE ACCESS FULL | SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*37 |           JOIN FILTER CREATE   |                      |            |         1|      431( 0)|                                |
| 38 |            PX RECEIVER BROADCAST I2N COL| QUEUE_3              |            |         1|      431( 0)|                                |
| 39 |             PX SEND BROADCAST  | DEGREE_1,PART_64     |            |         1|      431( 0)|                                |
|*40 |              TABLE ACCESS FULL | NATION               | REGRESS    |         1|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[3][CHAR, 25], RemoteTable[3][VARCHAR, 40]
   2 - Projection: Tuple[0, 0][CHAR, 25], Tuple[0, 1][VARCHAR, 40]
   3 - Projection: Tuple[0, 0][CHAR, 25], Tuple[0, 1][VARCHAR, 40]
   4 - Projection: Tuple[0, 0][CHAR, 25], Tuple[0, 1][VARCHAR, 40]
   5 - Projection: Tuple[0, 0][CHAR, 25], Tuple[0, 1][VARCHAR, 40]
   6 - Projection: Tuple[0, 0][CHAR, 25], Tuple[0, 1][VARCHAR, 40]
   7 - Projection: Tuple[1, 1][CHAR, 25], Tuple[1, 2][VARCHAR, 40]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
   8 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME USE(3): "PARTSUPP"."PS_SUPPKEY")
   9 - Projection: Tuple[0, 0, 1][INTEGER]                      
  10 - Projection: Tuple[0, 0, 1][INTEGER]                      
  11 - Projection: Tuple[0, 0, 1][INTEGER]                      
                   access(Tuple[0, 0, 1])                       
  12 - Projection: Tuple[1, 1, 1][INTEGER]                      
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0] AND Tuple[0, 1] = Tuple[1, 1, 1])
                   filter(Tuple[1, 2] > Tuple[0, 2])            
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][NUMBER]
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "LINEITEM"."L_PARTKEY", "LINEITEM"."L_SUPPKEY")
  14 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER], .5*Tuple[0, 0][NUMBER]
  15 - Projection: SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
       Predicate : group expressions(Tuple[0, 1], Tuple[0, 2])  
  16 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  17 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
                   access(Tuple[0, 1])                          
  18 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  19 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
  20 - Projection: Tuple[0, 4][NUMBER, (15, 2)], Tuple[0, 1][INTEGER], Tuple[0, 2][INTEGER]
       Predicate : access("LINEITEM"."L_SHIPDATE" >= '1994-01-01' AND "LINEITEM"."L_SHIPDATE"  < '1995-01-01')
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "LINEITEM"."L_PARTKEY", "LINEITEM"."L_SUPPKEY")
  21 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "PARTSUPP"."PS_PARTKEY", "PARTSUPP"."PS_SUPPKEY")
  22 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][INTEGER]
       Predicate : access(Tuple[0, 0, 0] = Tuple[1, 0])         
  23 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][INTEGER]
  24 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][INTEGER]
  25 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][INTEGER]
  26 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "PARTSUPP"."PS_PARTKEY" AND RUNTIME USE(3): "PARTSUPP"."PS_SUPPKEY")
  27 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "PART"."P_PARTKEY")
  28 - Projection: Tuple[0, 0][INTEGER]                         
  29 - Projection: Tuple[0, 0][INTEGER]                         
  30 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : filter(Tuple[0, 1] LIKE 'forest%')           
  31 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "SUPPLIER"."S_SUPPKEY")
  32 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25], Tuple[0, 3][VARCHAR, 40]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  33 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25], Tuple[0, 3][VARCHAR, 40]
  34 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25], Tuple[0, 3][VARCHAR, 40]
  35 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25], Tuple[0, 3][VARCHAR, 40]
  36 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25], Tuple[0, 2][VARCHAR, 40]
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "SUPPLIER"."S_NATIONKEY")
  37 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "NATION"."N_NATIONKEY")
  38 - Projection: Tuple[0, 0][INTEGER]                         
  39 - Projection: Tuple[0, 0][INTEGER]                         
  40 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("NATION"."N_NAME" = 'CANADA')         

112 rows fetched.

SQL> 
SQL> explain -- Q21: Suppliers Who Kept Orders Waiting Query
   2 select
   3 	s_name,
   4 	count(*) as numwait
   5 from
   6 	supplier,
   7 	lineitem l1,
   8 	orders,
   9 	nation
  10 where
  11 	s_suppkey = l1.l_suppkey
  12 	and o_orderkey = l1.l_orderkey
  13 	and o_orderstatus = 'F'
  14 	and l1.l_receiptdate > l1.l_commitdate
  15 	and exists (
  16 		select
  17 			*
  18 		from
  19 			lineitem l2
  20 		where
  21 			l2.l_orderkey = l1.l_orderkey
  22 			and l2.l_suppkey <> l1.l_suppkey
  23 	)
  24 	and not exists (
  25 		select
  26 			*
  27 		from
  28 			lineitem l3
  29 		where
  30 			l3.l_orderkey = l1.l_orderkey
  31 			and l3.l_suppkey <> l1.l_suppkey
  32 			and l3.l_receiptdate > l3.l_commitdate
  33 	)
  34 	and s_nationkey = n_nationkey
  35 	and n_name = 'SAUDI ARABIA'
  36 group by
  37 	s_name
  38 order by
  39 	numwait desc,
  40 	s_name
  41 limit 100;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 3926809017                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  COL TO ROW                    |                      |            |          |             |                                |
|  2 |   PX COORDINATOR               |                      |            |          |             |                                |
|  3 |    WINDOW                      |                      |            |       100|   249986( 0)|                                |
|  4 |     TOP SORT                   |                      |            |      1000|   249986( 0)|                                |
|  5 |      PX RECEIVER GATHER N2I COL| QUEUE_0              |            |      1000|   249704( 0)|                                |
|  6 |       PX SEND RANDOM           | DEGREE_16,PART_0     |            |      1000|   249704( 0)|                                |
|* 7 |        HASH GROUP              |                      |            |      1000|   249700( 0)|                                |
|  8 |         PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |      2073|   249700( 0)|                                |
|* 9 |          PX SEND HASHED        | DEGREE_16,PART_64    |            |      2073|   249700( 0)|                                |
|*10 |           HASH JOIN RIGHT ANTI |                      |            |      2073|   249700( 0)|                                |
| 11 |            JOIN FILTER USE     |                      |            | 208371280|     4210( 0)|                                |
| 12 |             PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 208371280|     4210( 0)|                                |
| 13 |              PART SCAN ALL     |                      |            | 208371280|     4210( 0)| [0,63]                         |
|*14 |               TABLE ACCESS FULL| LINEITEM             | REGRESS    | 208371280|     4210( 0)|                                |
|*15 |            JOIN FILTER CREATE  |                      |            |      2074|   219665( 0)|                                |
|*16 |             HASH JOIN INNER    |                      |            |      2074|   219665( 0)|                                |
| 17 |              JOIN FILTER USE   |                      |            |  73072504|      871( 0)|                                |
| 18 |               PX BLOCK ITERATOR HASHED| DEGREE_16            |            |  73072504|      871( 0)|                                |
| 19 |                PART SCAN ALL   |                      |            |  73072504|      871( 0)| [0,63]                         |
|*20 |                 TABLE ACCESS FULL| ORDERS               | REGRESS    |  73072504|      871( 0)|                                |
|*21 |              JOIN FILTER CREATE|                      |            |      2129|   209736( 0)|                                |
| 22 |               PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            |      2129|   209736( 0)|                                |
|*23 |                PX SEND HASHED  | DEGREE_16,PART_64    |            |      2129|   209736( 0)|                                |
|*24 |                 HASH JOIN INNER|                      |            |      2129|   209736( 0)|                                |
| 25 |                  JOIN FILTER USE|                      |            |     53231|   209117( 0)|                                |
| 26 |                   PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_3              |            |     53231|   209117( 0)|                                |
|*27 |                    PX SEND HASHED| DEGREE_16,PART_64    |            |     53231|   209117( 0)|                                |
|*28 |                     HASH JOIN RIGHT SEMI|                      |            |     53231|   209117( 0)|                                |
| 29 |                      JOIN FILTER USE|                      |            | 600037888|     2976( 0)|                                |
| 30 |                       PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 600037888|     2976( 0)|                                |
| 31 |                        PART SCAN ALL|                      |            | 600037888|     2976( 0)| [0,63]                         |
|*32 |                         TABLE ACCESS FULL| LINEITEM             | REGRESS    | 600037888|     2976( 0)|                                |
|*33 |                      JOIN FILTER CREATE|                      |            | 208371280|     4210( 0)|                                |
| 34 |                       PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 208371280|     4210( 0)|                                |
| 35 |                        PART SCAN ALL|                      |            | 208371280|     4210( 0)| [0,63]                         |
|*36 |                         TABLE ACCESS FULL| LINEITEM             | REGRESS    | 208371280|     4210( 0)|                                |
|*37 |                  JOIN FILTER CREATE|                      |            |     40000|      588( 0)|                                |
|*38 |                   HASH JOIN INNER|                      |            |     40000|      588( 0)|                                |
| 39 |                    JOIN FILTER USE|                      |            |   1000000|       33( 0)|                                |
| 40 |                     PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   1000000|       33( 0)|                                |
| 41 |                      PART SCAN ALL|                      |            |   1000000|       33( 0)| [0,63]                         |
|*42 |                       TABLE ACCESS FULL| SUPPLIER             | REGRESS    |   1000000|       33( 0)|                                |
|*43 |                    JOIN FILTER CREATE|                      |            |         1|      431( 0)|                                |
| 44 |                     PX RECEIVER BROADCAST I2N COL| QUEUE_4              |            |         1|      431( 0)|                                |
| 45 |                      PX SEND BROADCAST| DEGREE_1,PART_64     |            |         1|      431( 0)|                                |
|*46 |                       TABLE ACCESS FULL| NATION               | REGRESS    |         1|      431( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: RemoteTable[6][CHAR, 25], RemoteTable[6][BIGINT]
   2 - Projection: Tuple[0, 0][CHAR, 25], Tuple[0, 1][BIGINT]   
   3 - Projection: Tuple[0, 1][CHAR, 25], Tuple[0, 0][BIGINT]   
   4 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 25]   
   5 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 25]   
   6 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][CHAR, 25]   
   7 - Projection: COUNT(1)[BIGINT], Tuple[0, 0][CHAR, 25]      
       Predicate : group expressions(Tuple[0, 0])               
   8 - Projection: Tuple[0, 0][CHAR, 25]                        
   9 - Projection: Tuple[0, 0][CHAR, 25]                        
                   access(Tuple[0, 0])                          
  10 - Projection: Tuple[1, 2][CHAR, 25]                        
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
                   filter(Tuple[0, 1] <> Tuple[1, 1, 1])        
  11 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  12 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  13 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  14 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 2][INTEGER]   
       Predicate : filter(Tuple[0, 12] > Tuple[0, 11])          
       Predicate : RUNTIME FILTER(RUNTIME USE(4): "L3"."L_ORDERKEY")
  15 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(4): "L1"."L_ORDERKEY")
  16 - Projection: Tuple[1, 0, 0][INTEGER], Tuple[1, 1, 1][INTEGER], Tuple[1, 2][CHAR, 25]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
  17 - Projection: Tuple[0, 0][INTEGER]                         
  18 - Projection: Tuple[0, 0][INTEGER]                         
  19 - Projection: Tuple[0, 0][INTEGER]                         
  20 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("ORDERS"."O_ORDERSTATUS" = 'F')       
       Predicate : RUNTIME FILTER(RUNTIME USE(3): "ORDERS"."O_ORDERKEY")
  21 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(3): "L1"."L_ORDERKEY")
  22 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  23 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER], Tuple[0, 2][CHAR, 25]
                   access(Tuple[0, 0, 0])                       
  24 - Projection: Tuple[0, 1, 0][INTEGER], Tuple[0, 0, 1][INTEGER], Tuple[1, 1][CHAR, 25]
       Predicate : access(Tuple[0, 0, 1] = Tuple[1, 0])         
  25 - Projection: Tuple[0, 0, 1][INTEGER], Tuple[0, 1, 0][INTEGER]
  26 - Projection: Tuple[0, 0, 1][INTEGER], Tuple[0, 1, 0][INTEGER]
  27 - Projection: Tuple[0, 0, 1][INTEGER], Tuple[0, 1, 0][INTEGER]
                   access(Tuple[0, 0, 1])                       
  28 - Projection: Tuple[1, 1, 1][INTEGER], Tuple[1, 0, 0][INTEGER]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
                   filter(Tuple[0, 1] <> Tuple[1, 1, 1])        
  29 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  30 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  31 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER]   
  32 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 2][INTEGER]   
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "L2"."L_ORDERKEY")
  33 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "L1"."L_ORDERKEY")
  34 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER]
  35 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1, 1][INTEGER]
  36 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 2, 1][INTEGER]
       Predicate : filter(Tuple[0, 12] > Tuple[0, 11])          
       Predicate : RUNTIME FILTER(RUNTIME USE(2): "L1"."L_SUPPKEY")
  37 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]  
       Predicate : RUNTIME FILTER(RUNTIME CREATE(2): "SUPPLIER"."S_SUPPKEY")
  38 - Projection: Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]  
       Predicate : access(Tuple[0, 0] = Tuple[1, 0])            
  39 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  40 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  41 - Projection: Tuple[0, 0][INTEGER], Tuple[0, 1][INTEGER], Tuple[0, 2][CHAR, 25]
  42 - Projection: Tuple[0, 3][INTEGER], Tuple[0, 0][INTEGER], Tuple[0, 1][CHAR, 25]
       Predicate : RUNTIME FILTER(RUNTIME USE(1): "SUPPLIER"."S_NATIONKEY")
  43 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME CREATE(1): "NATION"."N_NATIONKEY")
  44 - Projection: Tuple[0, 0][INTEGER]                         
  45 - Projection: Tuple[0, 0][INTEGER]                         
  46 - Projection: Tuple[0, 0][INTEGER]                         
       Predicate : access("NATION"."N_NAME" = 'SAUDI ARABIA')   

129 rows fetched.

SQL> 
SQL> explain -- Q22: Global Sales Opportunity Query
   2 select
   3 	cntrycode,
   4 	count(*) as numcust,
   5 	sum(c_acctbal) as totacctbal
   6 from (
   7 	select
   8 		substr(c_phone, 1, 2) as cntrycode,
   9 		c_acctbal
  10 	from
  11 		customer
  12 	where
  13 		substr(c_phone, 1, 2) in
  14 			('13','31','23','29','30','18','17')
  15 		and c_acctbal > (
  16 			select
  17 				avg(c_acctbal)
  18 			from
  19 				customer
  20 			where
  21 				c_acctbal > 0.00
  22 				and substr (c_phone, 1, 2) in
  23 					('13','31','23','29','30','18','17')
  24 		)
  25 		and not exists (
  26 			select
  27 				*
  28 			from
  29 				orders
  30 			where
  31 				o_custkey = c_custkey
  32 		)
  33 	) custsale
  34 group by
  35 	cntrycode
  36 order by
  37 	cntrycode;

PLAN_DESCRIPTION                                                 
---------------------------------------------------------------- 
SQL hash value: 3798414091                                      
Optimizer: ADOPT_C                                              
                                                                
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
| Id | Operation type                 | Name                 | Owner      | Rows     | Cost(%CPU)  | Partition info                 |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
|  0 | SELECT STATEMENT               |                      |            |          |             |                                |
|  1 |  RESULT                        | QUERY[1]             |            |          |             |                                |
|  2 |   AGGREGATE                    |                      |            |         1|      370( 0)|                                |
|  3 |    PX RECEIVER GATHER N2I COL  | QUEUE_3              |            |         1|      370( 0)|                                |
|  4 |     PX SEND RANDOM             | DEGREE_16,PART_0     |            |         1|      370( 0)|                                |
|  5 |      AGGREGATE                 |                      |            |         1|      370( 0)|                                |
|  6 |       PX BLOCK ITERATOR HASHED | DEGREE_16            |            |   3560129|      352( 0)|                                |
|  7 |        PART SCAN ALL           |                      |            |   3560129|      352( 0)| [0,63]                         |
|* 8 |         TABLE ACCESS FULL      | CUSTOMER             | REGRESS    |   3560129|      352( 0)|                                |
|  9 |  COL TO ROW                    |                      |            |          |             |                                |
| 10 |   PX COORDINATOR               |                      |            |          |             |                                |
| 11 |    SORT ORDER BY               |                      |            |      1000|    22076( 0)|                                |
| 12 |     PX RECEIVER GATHER N2I COL | QUEUE_0              |            |      1000|    21793( 0)|                                |
| 13 |      PX SEND RANDOM            | DEGREE_16,PART_0     |            |      1000|    21793( 0)|                                |
|*14 |       HASH GROUP               |                      |            |      1000|    21790( 0)|                                |
| 15 |        PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_1              |            |      1000|    21790( 0)|                                |
|*16 |         PX SEND HASHED         | DEGREE_16,PART_64    |            |      1000|    21790( 0)|                                |
|*17 |          HASH GROUP            |                      |            |      1000|    21790( 0)|                                |
| 18 |           RESULT               |                      |            |    826465|    21787( 0)|                                |
|*19 |            HASH JOIN RIGHT ANTI|                      |            |    826465|    21742( 0)|                                |
| 20 |             JOIN FILTER USE    |                      |            | 150000000|      912( 0)|                                |
| 21 |              PX RECEIVER REDISTRIBUTED N2N COL| QUEUE_2              |            | 150000000|      912( 0)|                                |
|*22 |               PX SEND HASHED   | DEGREE_16,PART_64    |            | 150000000|      912( 0)|                                |
| 23 |                PX BLOCK ITERATOR HASHED| DEGREE_16            |            | 150000000|      563( 0)|                                |
| 24 |                 PART SCAN ALL  |                      |            | 150000000|      563( 0)| [0,63]                         |
|*25 |                  TABLE ACCESS FULL| ORDERS               | REGRESS    | 150000000|      563( 0)|                                |
|*26 |             JOIN FILTER CREATE |                      |            |   2479312|      722( 0)|                                |
| 27 |              PX BLOCK ITERATOR HASHED| DEGREE_16            |            |   2479312|      722( 0)|                                |
| 28 |               PART SCAN ALL    |                      |            |   2479312|      722( 0)| [0,63]                         |
|*29 |                TABLE ACCESS FULL| CUSTOMER             | REGRESS    |   2479312|      722( 0)|                                |
+----+--------------------------------+----------------------+------------+----------+-------------+--------------------------------+
                                                                
Operation Information (identified by operation id):             
---------------------------------------------------             
                                                                
   1 - Projection: Tuple[0, 0]/Tuple[0, 1][NUMBER]              
   2 - Projection: SUM(Tuple[0, 0])[NUMBER], CAST(SUM(Tuple[0, 1]) AS BIGINT)[BIGINT]
   3 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][BIGINT]     
   4 - Projection: Tuple[0, 0][NUMBER], Tuple[0, 1][BIGINT]     
   5 - Projection: SUM(Tuple[0, 0])[NUMBER], COUNT(Tuple[0, 0])[BIGINT]
   6 - Projection: Tuple[0, 0][NUMBER, (15, 2)]                 
   7 - Projection: Tuple[0, 0][NUMBER, (15, 2)]                 
   8 - Projection: Tuple[0, 5][NUMBER, (15, 2)]                 
       Predicate : access("CUSTOMER"."C_ACCTBAL" > 0)           
                   filter(SUBSTR(Tuple[0, 4], 1, 2) IN ('13', '31', '23', '29', '30', '18', '17'))
   9 - Projection: RemoteTable[1][BIGINT], RemoteTable[1][NUMBER], RemoteTable[1][VARCHAR, 15]
  10 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][NUMBER], Tuple[0, 2][VARCHAR, 15]
  11 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][NUMBER], Tuple[0, 2][VARCHAR, 15]
  12 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][NUMBER], Tuple[0, 2][VARCHAR, 15]
  13 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][NUMBER], Tuple[0, 2][VARCHAR, 15]
  14 - Projection: CAST(SUM(Tuple[0, 0]) AS BIGINT)[BIGINT], SUM(Tuple[0, 1])[NUMBER], Tuple[0, 2][VARCHAR, 15]
       Predicate : group expressions(Tuple[0, 2])               
  15 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][NUMBER], Tuple[0, 2][VARCHAR, 15]
  16 - Projection: Tuple[0, 0][BIGINT], Tuple[0, 1][NUMBER], Tuple[0, 2][VARCHAR, 15]
                   access(Tuple[0, 2])                          
  17 - Projection: COUNT(1)[BIGINT], SUM(Tuple[0, 0])[NUMBER], Tuple[0, 1][VARCHAR, 15]
       Predicate : group expressions(Tuple[0, 1])               
  18 - Projection: Tuple[0, 0][NUMBER, (15, 2)], Tuple[0, 1][VARCHAR, 15]
  19 - Projection: Tuple[1, 1][NUMBER, (15, 2)], Tuple[1, 2][VARCHAR, 15]
       Predicate : access(Tuple[0, 0] = Tuple[1, 0, 0])         
  20 - Projection: Tuple[0, 0][INTEGER]                         
  21 - Projection: Tuple[0, 0][INTEGER]                         
  22 - Projection: Tuple[0, 0][INTEGER]                         
                   access(Tuple[0, 0])                          
  23 - Projection: Tuple[0, 0][INTEGER]                         
  24 - Projection: Tuple[0, 0][INTEGER]                         
  25 - Projection: Tuple[0, 1][INTEGER]                         
       Predicate : RUNTIME FILTER(RUNTIME USE(0): "ORDERS"."O_CUSTKEY")
  26 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][VARCHAR, 15]
       Predicate : RUNTIME FILTER(RUNTIME CREATE(0): "CUSTOMER"."C_CUSTKEY")
  27 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][VARCHAR, 15]
  28 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 1][NUMBER, (15, 2)], Tuple[0, 2][VARCHAR, 15]
  29 - Projection: Tuple[0, 0, 0][INTEGER], Tuple[0, 5][NUMBER, (15, 2)], SUBSTR(Tuple[0, 4], 1, 2)[VARCHAR, 15]
       Predicate : filter(SUBSTR(Tuple[0, 4], 1, 2) IN ('13', '31', '23', '29', '30', '18', '17') AND Tuple[0, 5] > QUERY[1])

80 rows fetched.

SQL> 

